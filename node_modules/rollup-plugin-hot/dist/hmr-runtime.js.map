{"version":3,"file":"hmr-runtime.js","sources":["../node_modules/systemjs/dist/system.js","../lib/constants.js","../src/deps-map.js","../src/hot.js","../src/utils.js","../src/overlay.js","../src/log.js","../src/client.js","../src/main.js","../src/system-hooks.js"],"sourcesContent":["/*\n* SystemJS 6.0.0\n*/\n(function () {\n  const hasSelf = typeof self !== 'undefined';\n\n  const hasDocument = typeof document !== 'undefined';\n\n  const envGlobal = hasSelf ? self : global;\n\n  let baseUrl;\n\n  if (hasDocument) {\n    const baseEl = document.querySelector('base[href]');\n    if (baseEl)\n      baseUrl = baseEl.href;\n  }\n\n  if (!baseUrl && typeof location !== 'undefined') {\n    baseUrl = location.href.split('#')[0].split('?')[0];\n    const lastSepIndex = baseUrl.lastIndexOf('/');\n    if (lastSepIndex !== -1)\n      baseUrl = baseUrl.slice(0, lastSepIndex + 1);\n  }\n\n  const backslashRegEx = /\\\\/g;\n  function resolveIfNotPlainOrUrl (relUrl, parentUrl) {\n    if (relUrl.indexOf('\\\\') !== -1)\n      relUrl = relUrl.replace(backslashRegEx, '/');\n    // protocol-relative\n    if (relUrl[0] === '/' && relUrl[1] === '/') {\n      return parentUrl.slice(0, parentUrl.indexOf(':') + 1) + relUrl;\n    }\n    // relative-url\n    else if (relUrl[0] === '.' && (relUrl[1] === '/' || relUrl[1] === '.' && (relUrl[2] === '/' || relUrl.length === 2 && (relUrl += '/')) ||\n        relUrl.length === 1  && (relUrl += '/')) ||\n        relUrl[0] === '/') {\n      const parentProtocol = parentUrl.slice(0, parentUrl.indexOf(':') + 1);\n      // Disabled, but these cases will give inconsistent results for deep backtracking\n      //if (parentUrl[parentProtocol.length] !== '/')\n      //  throw Error('Cannot resolve');\n      // read pathname from parent URL\n      // pathname taken to be part after leading \"/\"\n      let pathname;\n      if (parentUrl[parentProtocol.length + 1] === '/') {\n        // resolving to a :// so we need to read out the auth and host\n        if (parentProtocol !== 'file:') {\n          pathname = parentUrl.slice(parentProtocol.length + 2);\n          pathname = pathname.slice(pathname.indexOf('/') + 1);\n        }\n        else {\n          pathname = parentUrl.slice(8);\n        }\n      }\n      else {\n        // resolving to :/ so pathname is the /... part\n        pathname = parentUrl.slice(parentProtocol.length + (parentUrl[parentProtocol.length] === '/'));\n      }\n\n      if (relUrl[0] === '/')\n        return parentUrl.slice(0, parentUrl.length - pathname.length - 1) + relUrl;\n\n      // join together and split for removal of .. and . segments\n      // looping the string instead of anything fancy for perf reasons\n      // '../../../../../z' resolved to 'x/y' is just 'z'\n      const segmented = pathname.slice(0, pathname.lastIndexOf('/') + 1) + relUrl;\n\n      const output = [];\n      let segmentIndex = -1;\n      for (let i = 0; i < segmented.length; i++) {\n        // busy reading a segment - only terminate on '/'\n        if (segmentIndex !== -1) {\n          if (segmented[i] === '/') {\n            output.push(segmented.slice(segmentIndex, i + 1));\n            segmentIndex = -1;\n          }\n        }\n\n        // new segment - check if it is relative\n        else if (segmented[i] === '.') {\n          // ../ segment\n          if (segmented[i + 1] === '.' && (segmented[i + 2] === '/' || i + 2 === segmented.length)) {\n            output.pop();\n            i += 2;\n          }\n          // ./ segment\n          else if (segmented[i + 1] === '/' || i + 1 === segmented.length) {\n            i += 1;\n          }\n          else {\n            // the start of a new segment as below\n            segmentIndex = i;\n          }\n        }\n        // it is the start of a new segment\n        else {\n          segmentIndex = i;\n        }\n      }\n      // finish reading out the last segment\n      if (segmentIndex !== -1)\n        output.push(segmented.slice(segmentIndex));\n      return parentUrl.slice(0, parentUrl.length - pathname.length) + output.join('');\n    }\n  }\n\n  /*\n   * Import maps implementation\n   *\n   * To make lookups fast we pre-resolve the entire import map\n   * and then match based on backtracked hash lookups\n   *\n   */\n\n  function resolveUrl (relUrl, parentUrl) {\n    return resolveIfNotPlainOrUrl(relUrl, parentUrl) || (relUrl.indexOf(':') !== -1 ? relUrl : resolveIfNotPlainOrUrl('./' + relUrl, parentUrl));\n  }\n\n  function objectAssign (to, from) {\n    for (let p in from)\n      to[p] = from[p];\n    return to;\n  }\n\n  function resolveAndComposePackages (packages, outPackages, baseUrl, parentMap, parentUrl) {\n    for (let p in packages) {\n      const rhs = packages[p];\n      // package fallbacks not currently supported\n      if (typeof rhs !== 'string')\n        continue;\n      const mapped = resolveImportMap(parentMap, resolveIfNotPlainOrUrl(rhs, baseUrl) || rhs, parentUrl);\n      if (!mapped)\n        targetWarning(p, rhs, 'bare specifier did not resolve');\n      else\n        outPackages[p] = mapped;\n    }\n  }\n\n  function resolveAndComposeImportMap (json, baseUrl, parentMap) {\n    const outMap = { imports: objectAssign({}, parentMap.imports), scopes: objectAssign({}, parentMap.scopes) };\n\n    if (json.imports)\n      resolveAndComposePackages(json.imports, outMap.imports, baseUrl, parentMap, null);\n\n    if (json.scopes)\n      for (let s in json.scopes) {\n        const resolvedScope = resolveUrl(s, baseUrl);\n        resolveAndComposePackages(json.scopes[s], outMap.scopes[resolvedScope] || (outMap.scopes[resolvedScope] = {}), baseUrl, parentMap, resolvedScope);\n      }\n\n    return outMap;\n  }\n\n  function getMatch (path, matchObj) {\n    if (matchObj[path])\n      return path;\n    let sepIndex = path.length;\n    do {\n      const segment = path.slice(0, sepIndex + 1);\n      if (segment in matchObj)\n        return segment;\n    } while ((sepIndex = path.lastIndexOf('/', sepIndex - 1)) !== -1)\n  }\n\n  function applyPackages (id, packages) {\n    const pkgName = getMatch(id, packages);\n    if (pkgName) {\n      const pkg = packages[pkgName];\n      if (pkg === null) return;\n      if (id.length > pkgName.length && pkg[pkg.length - 1] !== '/')\n        targetWarning(pkgName, pkg, \"should have a trailing '/'\");\n      else\n        return pkg + id.slice(pkgName.length);\n    }\n  }\n\n  function targetWarning (match, target, msg) {\n    console.warn(\"Package target \" + msg + \", resolving target '\" + target + \"' for \" + match);\n  }\n\n  function resolveImportMap (importMap, resolvedOrPlain, parentUrl) {\n    let scopeUrl = parentUrl && getMatch(parentUrl, importMap.scopes);\n    while (scopeUrl) {\n      const packageResolution = applyPackages(resolvedOrPlain, importMap.scopes[scopeUrl]);\n      if (packageResolution)\n        return packageResolution;\n      scopeUrl = getMatch(scopeUrl.slice(0, scopeUrl.lastIndexOf('/')), importMap.scopes);\n    }\n    return applyPackages(resolvedOrPlain, importMap.imports) || resolvedOrPlain.indexOf(':') !== -1 && resolvedOrPlain;\n  }\n\n  /*\n   * SystemJS Core\n   *\n   * Provides\n   * - System.import\n   * - System.register support for\n   *     live bindings, function hoisting through circular references,\n   *     reexports, dynamic import, import.meta.url, top-level await\n   * - System.getRegister to get the registration\n   * - Symbol.toStringTag support in Module objects\n   * - Hookable System.createContext to customize import.meta\n   * - System.onload(err, id, deps) handler for tracing / hot-reloading\n   *\n   * Core comes with no System.prototype.resolve or\n   * System.prototype.instantiate implementations\n   */\n\n  const hasSymbol = typeof Symbol !== 'undefined';\n  const toStringTag = hasSymbol && Symbol.toStringTag;\n  const REGISTRY = hasSymbol ? Symbol() : '@';\n\n  function SystemJS () {\n    this[REGISTRY] = {};\n  }\n\n  const systemJSPrototype = SystemJS.prototype;\n\n  systemJSPrototype.prepareImport = function () {};\n\n  systemJSPrototype.import = function (id, parentUrl) {\n    const loader = this;\n    return Promise.resolve(loader.prepareImport())\n    .then(function() {\n      return loader.resolve(id, parentUrl);\n    })\n    .then(function (id) {\n      const load = getOrCreateLoad(loader, id);\n      return load.C || topLevelLoad(loader, load);\n    });\n  };\n\n  // Hookable createContext function -> allowing eg custom import meta\n  systemJSPrototype.createContext = function (parentId) {\n    return {\n      url: parentId\n    };\n  };\n\n  // onLoad(err, id, deps) provided for tracing / hot-reloading\n  systemJSPrototype.onload = function () {};\n  function loadToId (load) {\n    return load.id;\n  }\n  function triggerOnload (loader, load, err) {\n    loader.onload(err, load.id, load.d && load.d.map(loadToId));\n    if (err)\n      throw err;\n  }\n\n  let lastRegister;\n  systemJSPrototype.register = function (deps, declare) {\n    lastRegister = [deps, declare];\n  };\n\n  /*\n   * getRegister provides the last anonymous System.register call\n   */\n  systemJSPrototype.getRegister = function () {\n    const _lastRegister = lastRegister;\n    lastRegister = undefined;\n    return _lastRegister;\n  };\n\n  function getOrCreateLoad (loader, id, firstParentUrl) {\n    let load = loader[REGISTRY][id];\n    if (load)\n      return load;\n\n    const importerSetters = [];\n    const ns = Object.create(null);\n    if (toStringTag)\n      Object.defineProperty(ns, toStringTag, { value: 'Module' });\n\n    let instantiatePromise = Promise.resolve()\n    .then(function () {\n      return loader.instantiate(id, firstParentUrl);\n    })\n    .then(function (registration) {\n      if (!registration)\n        throw Error('Module ' + id + ' did not instantiate');\n      function _export (name, value) {\n        // note if we have hoisted exports (including reexports)\n        load.h = true;\n        let changed = false;\n        if (typeof name !== 'object') {\n          if (!(name in ns) || ns[name] !== value) {\n            ns[name] = value;\n            changed = true;\n          }\n        }\n        else {\n          for (let p in name) {\n            let value = name[p];\n            if (!(p in ns) || ns[p] !== value) {\n              ns[p] = value;\n              changed = true;\n            }\n          }\n        }\n        if (changed)\n          for (let i = 0; i < importerSetters.length; i++)\n            importerSetters[i](ns);\n        return value;\n      }\n      const declared = registration[1](_export, registration[1].length === 2 ? {\n        import: function (importId) {\n          return loader.import(importId, id);\n        },\n        meta: loader.createContext(id)\n      } : undefined);\n      load.e = declared.execute || function () {};\n      return [registration[0], declared.setters || []];\n    });\n\n    instantiatePromise = instantiatePromise.catch(function (err) {\n        triggerOnload(loader, load, err);\n      });\n\n    const linkPromise = instantiatePromise\n    .then(function (instantiation) {\n      return Promise.all(instantiation[0].map(function (dep, i) {\n        const setter = instantiation[1][i];\n        return Promise.resolve(loader.resolve(dep, id))\n        .then(function (depId) {\n          const depLoad = getOrCreateLoad(loader, depId, id);\n          // depLoad.I may be undefined for already-evaluated\n          return Promise.resolve(depLoad.I)\n          .then(function () {\n            if (setter) {\n              depLoad.i.push(setter);\n              // only run early setters when there are hoisted exports of that module\n              // the timing works here as pending hoisted export calls will trigger through importerSetters\n              if (depLoad.h || !depLoad.I)\n                setter(depLoad.n);\n            }\n            return depLoad;\n          });\n        })\n      }))\n      .then(function (depLoads) {\n        load.d = depLoads;\n      });\n    });\n\n    linkPromise.catch(function (err) {\n      load.e = null;\n      load.er = err;\n    });\n\n    // Capital letter = a promise function\n    return load = loader[REGISTRY][id] = {\n      id: id,\n      // importerSetters, the setters functions registered to this dependency\n      // we retain this to add more later\n      i: importerSetters,\n      // module namespace object\n      n: ns,\n\n      // instantiate\n      I: instantiatePromise,\n      // link\n      L: linkPromise,\n      // whether it has hoisted exports\n      h: false,\n\n      // On instantiate completion we have populated:\n      // dependency load records\n      d: undefined,\n      // execution function\n      // set to NULL immediately after execution (or on any failure) to indicate execution has happened\n      // in such a case, C should be used, and E, I, L will be emptied\n      e: undefined,\n\n      // On execution we have populated:\n      // the execution error if any\n      er: undefined,\n      // in the case of TLA, the execution promise\n      E: undefined,\n\n      // On execution, L, I, E cleared\n\n      // Promise for top-level completion\n      C: undefined\n    };\n  }\n\n  function instantiateAll (loader, load, loaded) {\n    if (!loaded[load.id]) {\n      loaded[load.id] = true;\n      // load.L may be undefined for already-instantiated\n      return Promise.resolve(load.L)\n      .then(function () {\n        return Promise.all(load.d.map(function (dep) {\n          return instantiateAll(loader, dep, loaded);\n        }));\n      })\n    }\n  }\n\n  function topLevelLoad (loader, load) {\n    return load.C = instantiateAll(loader, load, {})\n    .then(function () {\n      return postOrderExec(loader, load, {});\n    })\n    .then(function () {\n      return load.n;\n    });\n  }\n\n  // the closest we can get to call(undefined)\n  const nullContext = Object.freeze(Object.create(null));\n\n  // returns a promise if and only if a top-level await subgraph\n  // throws on sync errors\n  function postOrderExec (loader, load, seen) {\n    if (seen[load.id])\n      return;\n    seen[load.id] = true;\n\n    if (!load.e) {\n      if (load.er)\n        throw load.er;\n      if (load.E)\n        return load.E;\n      return;\n    }\n\n    // deps execute first, unless circular\n    let depLoadPromises;\n    load.d.forEach(function (depLoad) {\n      {\n        try {\n          const depLoadPromise = postOrderExec(loader, depLoad, seen);\n          if (depLoadPromise) {\n            depLoadPromise.catch(function (err) {\n              triggerOnload(loader, load, err);\n            });\n            (depLoadPromises = depLoadPromises || []).push(depLoadPromise);\n          }\n        }\n        catch (err) {\n          triggerOnload(loader, load, err);\n        }\n      }\n    });\n    if (depLoadPromises)\n      return Promise.all(depLoadPromises).then(doExec);\n\n    return doExec();\n\n    function doExec () {\n      try {\n        let execPromise = load.e.call(nullContext);\n        if (execPromise) {\n          execPromise = execPromise.then(function () {\n              load.C = load.n;\n              load.E = null; // indicates completion\n              triggerOnload(loader, load, null);\n            }, function (err) {\n              triggerOnload(loader, load, err);\n            });\n          return load.E = load.E || execPromise;\n        }\n        // (should be a promise, but a minify optimization to leave out Promise.resolve)\n        load.C = load.n;\n        triggerOnload(loader, load, null);\n      }\n      catch (err) {\n        triggerOnload(loader, load, err);\n        load.er = err;\n        throw err;\n      }\n      finally {\n        load.L = load.I = undefined;\n        load.e = null;\n      }\n    }\n  }\n\n  envGlobal.System = new SystemJS();\n\n  /*\n   * Supports loading System.register via script tag injection\n   */\n\n  const systemRegister = systemJSPrototype.register;\n  systemJSPrototype.register = function (deps, declare) {\n    systemRegister.call(this, deps, declare);\n  };\n\n  systemJSPrototype.instantiate = function (url, firstParentUrl) {\n    const loader = this;\n    return new Promise(function (resolve, reject) {\n      let err;\n\n      function windowErrorListener(evt) {\n        if (evt.filename === url)\n          err = evt.error;\n      }\n\n      window.addEventListener('error', windowErrorListener);\n\n      const script = document.createElement('script');\n      script.charset = 'utf-8';\n      script.async = true;\n      script.crossOrigin = 'anonymous';\n      script.addEventListener('error', function () {\n        window.removeEventListener('error', windowErrorListener);\n        reject(Error('Error loading ' + url + (firstParentUrl ? ' from ' + firstParentUrl : '')));\n      });\n      script.addEventListener('load', function () {\n        window.removeEventListener('error', windowErrorListener);\n        document.head.removeChild(script);\n        // Note that if an error occurs that isn't caught by this if statement,\n        // that getRegister will return null and a \"did not instantiate\" error will be thrown.\n        if (err) {\n          reject(err);\n        }\n        else {\n          resolve(loader.getRegister());\n        }\n      });\n      script.src = url;\n      document.head.appendChild(script);\n    });\n  };\n\n  if (hasDocument) {\n    window.addEventListener('DOMContentLoaded', loadScriptModules);\n    loadScriptModules();\n  }\n\n  function loadScriptModules() {\n    document.querySelectorAll('script[type=systemjs-module]').forEach(function (script) {\n      if (script.src) {\n        System.import(script.src.slice(0, 7) === 'import:' ? script.src.slice(7) : resolveUrl(script.src, baseUrl));\n      }\n    });\n  }\n\n  /*\n   * Supports loading System.register in workers\n   */\n\n  if (hasSelf && typeof importScripts === 'function')\n    systemJSPrototype.instantiate = function (url) {\n      const loader = this;\n      return new Promise(function (resolve, reject) {\n        try {\n          importScripts(url);\n        }\n        catch (e) {\n          reject(e);\n        }\n        resolve(loader.getRegister());\n      });\n    };\n\n  /*\n   * SystemJS global script loading support\n   * Extra for the s.js build only\n   * (Included by default in system.js build)\n   */\n  (function (global) {\n\n  const systemJSPrototype = System.constructor.prototype;\n\n  // safari unpredictably lists some new globals first or second in object order\n  let firstGlobalProp, secondGlobalProp, lastGlobalProp;\n  function getGlobalProp () {\n    let cnt = 0;\n    let lastProp;\n    for (let p in global) {\n      // do not check frames cause it could be removed during import\n      if (!global.hasOwnProperty(p) || (!isNaN(p) && p < global.length))\n        continue;\n      if (cnt === 0 && p !== firstGlobalProp || cnt === 1 && p !== secondGlobalProp)\n        return p;\n      cnt++;\n      lastProp = p;\n    }\n    if (lastProp !== lastGlobalProp)\n      return lastProp;\n  }\n\n  function noteGlobalProps () {\n    // alternatively Object.keys(global).pop()\n    // but this may be faster (pending benchmarks)\n    firstGlobalProp = secondGlobalProp = undefined;\n    for (let p in global) {\n      // do not check frames cause it could be removed during import\n      if (!global.hasOwnProperty(p) || (!isNaN(p) && p < global.length))\n        continue;\n      if (!firstGlobalProp)\n        firstGlobalProp = p;\n      else if (!secondGlobalProp)\n        secondGlobalProp = p;\n      lastGlobalProp = p;\n    }\n    return lastGlobalProp;\n  }\n\n  const impt = systemJSPrototype.import;\n  systemJSPrototype.import = function () {\n    noteGlobalProps();\n    return impt.apply(this, arguments);\n  };\n\n  const emptyInstantiation = [[], function () { return {} }];\n\n  const getRegister = systemJSPrototype.getRegister;\n  systemJSPrototype.getRegister = function () {\n    const lastRegister = getRegister.call(this);\n    if (lastRegister)\n      return lastRegister;\n\n    // no registration -> attempt a global detection as difference from snapshot\n    // when multiple globals, we take the global value to be the last defined new global object property\n    // for performance, this will not support multi-version / global collisions as previous SystemJS versions did\n    // note in Edge, deleting and re-adding a global does not change its ordering\n    const globalProp = getGlobalProp();\n    if (!globalProp)\n      return emptyInstantiation;\n\n    let globalExport;\n    try {\n      globalExport = global[globalProp];\n    }\n    catch (e) {\n      return emptyInstantiation;\n    }\n\n    return [[], function (_export) {\n      return {\n        execute: function () {\n          _export({ default: globalExport, __useDefault: true });\n        }\n      };\n    }];\n  };\n\n  })(typeof self !== 'undefined' ? self : global);\n\n  /*\n   * Loads JSON, CSS, Wasm module types based on file extensions\n   * Supports application/javascript falling back to JS eval\n   */\n  const instantiate = systemJSPrototype.instantiate;\n  systemJSPrototype.instantiate = function (url, parent) {\n    const loader = this;\n    const ext = url.slice(url.lastIndexOf('.'));\n    switch (ext) {\n      case '.css':\n        return loadDynamicModule(function (_export, source) {\n          // Relies on a Constructable Stylesheet polyfill\n          const stylesheet = new CSSStyleSheet();\n          stylesheet.replaceSync(source);\n          _export('default', stylesheet);\n        });\n      case '.html':\n        return getSourceRes().then(function (res) {\n          return maybeJSFallback(res) || loadError(\"'.html' modules not implemented\");\n        });\n      case '.json':\n        return loadDynamicModule(function (_export, source) {\n          _export('default', JSON.parse(source));\n        });\n      case '.wasm':\n        return getSourceRes().then(function (res) {\n          return maybeJSFallback(res) ||\n              (WebAssembly.compileStreaming ? WebAssembly.compileStreaming(res) : res.arrayBuffer().then(WebAssembly.compile));\n        })\n        .then(function (module) {\n          const deps = [];\n          const setters = [];\n          const importObj = {};\n      \n          // we can only set imports if supported (eg early Safari doesnt support)\n          if (WebAssembly.Module.imports)\n            WebAssembly.Module.imports(module).forEach(function (impt) {\n              const key = impt.module;\n              if (deps.indexOf(key) === -1) {\n                deps.push(key);\n                setters.push(function (m) {\n                  importObj[key] = m;\n                });\n              }\n            });\n      \n          return [deps, function (_export) {\n            return {\n              setters: setters,\n              execute: function () {\n                return WebAssembly.instantiate(module, importObj)\n                .then(function (instance) {\n                  _export(instance.exports);\n                });\n              }\n            };\n          }];\n        });\n    }\n    return instantiate.apply(this, arguments);\n\n    function getSourceRes () {\n      return fetch(url).then(function (res) {\n        if (!res.ok)\n          loadError(res.status + ' ' + res.statusText);\n        return res;\n      });\n    }\n    function maybeJSFallback (res) {\n      const contentType = res.headers.get('content-type');\n      // if the resource is sent as application/javascript, support eval-based execution\n      if (contentType && contentType.match(/^application\\/javascript(;|$)/)) {\n        return res.text().then(function (source) {\n          (0, eval)(source);\n          return loader.getRegister();\n        });\n      }\n    }\n    function loadDynamicModule (createExec) {\n      return getSourceRes().then(function (res) {\n        return maybeJSFallback(res) || res.text().then(function (source) {\n          return [[], function (_export) {\n            return { execute: createExec(_export, source) };\n          }];\n        });\n      });\n    }\n    function loadError (msg) {\n      throw Error(msg + ', loading ' + url + (parent ? ' from ' + parent : ''));\n    }\n  };\n\n  /*\n   * Import map support for SystemJS\n   * \n   * <script type=\"systemjs-importmap\">{}</script>\n   * OR\n   * <script type=\"systemjs-importmap\" src=package.json></script>\n   * \n   * Only those import maps available at the time of SystemJS initialization will be loaded\n   * and they will be loaded in DOM order.\n   * \n   * There is no support for dynamic import maps injection currently.\n   */\n\n  let importMap = { imports: {}, scopes: {} }, importMapPromise;\n\n  if (hasDocument) {\n    Array.prototype.forEach.call(document.querySelectorAll('script[type=\"systemjs-importmap\"][src]'), function (script) {\n      script._j = fetch(script.src).then(function (res) {\n        return res.json();\n      });\n    });\n  }\n\n  systemJSPrototype.prepareImport = function () {\n    if (!importMapPromise) {\n      importMapPromise = Promise.resolve();\n      if (hasDocument)\n        Array.prototype.forEach.call(document.querySelectorAll('script[type=\"systemjs-importmap\"]'), function (script) {\n          importMapPromise = importMapPromise.then(function () {\n            return (script._j || script.src && fetch(script.src).then(function (resp) { return resp.json(); }) || Promise.resolve(JSON.parse(script.innerHTML)))\n            .then(function (json) {\n              importMap = resolveAndComposeImportMap(json, script.src || baseUrl, importMap);\n            });\n          });\n        });\n    }\n    return importMapPromise;\n  };\n\n  systemJSPrototype.resolve = function (id, parentUrl) {\n    parentUrl = parentUrl || baseUrl;\n    return resolveImportMap(importMap, resolveIfNotPlainOrUrl(id, parentUrl) || id, parentUrl) || throwUnresolved(id, parentUrl);\n  };\n\n  function throwUnresolved (id, parentUrl) {\n    throw Error(\"Unable to resolve specifier '\" + id + (parentUrl ? \"' from \" + parentUrl : \"'\"));\n  }\n\n  const toStringTag$1 = typeof Symbol !== 'undefined' && Symbol.toStringTag;\n\n  systemJSPrototype.get = function (id) {\n    const load = this[REGISTRY][id];\n    if (load && load.e === null && !load.E) {\n      if (load.er)\n        return null;\n      return load.n;\n    }\n  };\n\n  systemJSPrototype.getLoad = function (id) {\n    return this[REGISTRY][id];\n  };\n\n  systemJSPrototype.set = function (id, module) {\n    let ns;\n    if (toStringTag$1 && module[toStringTag$1] === 'Module') {\n      ns = module;\n    }\n    else {\n      ns = Object.assign(Object.create(null), module);\n      if (toStringTag$1)\n        Object.defineProperty(ns, toStringTag$1, { value: 'Module' });\n    }\n\n    const done = Promise.resolve(ns);\n\n    const load = this[REGISTRY][id] || (this[REGISTRY][id] = {\n      id: id,\n      i: [],\n      h: false,\n      d: [],\n      e: null,\n      er: undefined,\n      E: undefined\n    });\n\n    if (load.e || load.E)\n      return false;\n\n    Object.assign(load, {\n      n: ns,\n      I: done,\n      L: done,\n      C: done\n    });\n    return ns;\n  };\n\n  systemJSPrototype.has = function (id) {\n    const load = this[REGISTRY][id];\n    return !!load;\n  };\n\n  // Delete function provided for hot-reloading use cases\n  systemJSPrototype.delete = function (id) {\n    const registry = this[REGISTRY];\n    const load = registry[id];\n    // in future we can support load.E case by failing load first\n    // but that will require TLA callbacks to be implemented\n    if (!load || load.e !== null || load.E)\n      return false;\n\n    let importerSetters = load.i;\n    // remove from importerSetters\n    // (release for gc)\n    if (load.d)\n      load.d.forEach(function (depLoad) {\n        const importerIndex = depLoad.i.indexOf(load);\n        if (importerIndex !== -1)\n          depLoad.i.splice(importerIndex, 1);\n      });\n    delete registry[id];\n    return function () {\n      const load = registry[id];\n      if (!load || !importerSetters || load.e !== null || load.E)\n        return false;\n\n      // add back the old setters\n      importerSetters.forEach(setter => {\n        load.i.push(setter);\n        setter(load.n);\n      });\n      importerSetters = null;\n    };\n  };\n\n  const iterator = typeof Symbol !== 'undefined' && Symbol.iterator;\n\n  systemJSPrototype.entries = function () {\n    const loader = this, keys = Object.keys(loader[REGISTRY]);\n    let index = 0, ns, key;\n    const result = {\n      next: function () {\n        while (\n          (key = keys[index++]) !== undefined &&\n          (ns = loader.get(key)) === undefined\n        );\n        return {\n          done: key === undefined,\n          value: key !== undefined && [key, ns]\n        };\n      }\n    };\n\n    result[iterator] = function() { return this };\n\n    return result;\n  };\n\n  (function () {\n    const systemJSPrototype = System.constructor.prototype;\n    const lastUpdateFunction = {};\n\n    systemJSPrototype.reload = function (id, parentUrl) {\n      const loader = this;\n\n      // System.import resolves the url before setting up the loading state\n      // doing the same here ensures we don't run into race conditions\n      return Promise.resolve()\n        .then(function () {\n          return loader.resolve(id, parentUrl);\n        })\n        .then(function (id) {\n          if (!loader.has(id)) {\n            // module was not loaded before\n            return loader.import(id);\n          }\n\n          // import the module to ensure that the current module is full loaded\n          return loader.import(id)\n            .catch(function () {\n              // don't handle errors from the previous import, they might be fixed in the reload\n            })\n            .then(function () {\n              // delete the module from the registry, re-import it and\n              // update the references in the registry\n              const update = loader.delete(id);\n\n              function onResolved() {\n                if (update) {\n                  update();\n                } else if (id in lastUpdateFunction) {\n                  lastUpdateFunction[id]();\n                }\n\n                lastUpdateFunction[id] = update;\n              }\n              return loader.import(id)\n                .catch(function (error) {\n                  onResolved();\n                  throw error;\n                })\n                .then(function (module) {\n                  onResolved();\n                  return module;\n                });\n            });\n        });\n    };\n\n  })();\n\n}());\n","const gid = '__ROLLUP_PLUGIN_HOT_RUNTIME'\n\nmodule.exports = { gid }\n","const depsMap = {}\nconst importersMap = {}\nconst errors = {}\n\nconst getImporterEntry = id => {\n  const existing = importersMap[id]\n  if (!existing) {\n    return (importersMap[id] = new Set())\n  }\n  return existing\n}\n\n// TODO building this reverse lookup map is probably overkill\nexport const setDeps = (err, id, deps) => {\n  if (err) {\n    errors[id] = err\n  } else {\n    delete errors[id]\n  }\n  if (deps) {\n    depsMap[id] = deps\n    deps.forEach(dep => {\n      const entry = getImporterEntry(dep)\n      entry.add(id)\n    })\n  }\n}\n\nexport const forgetDeps = id => {\n  const deps = depsMap[id]\n  if (deps) {\n    delete depsMap[id]\n    for (const dep of deps) {\n      const importerDeps = importersMap[dep]\n      if (!importerDeps) continue\n      importerDeps.delete(id)\n    }\n  }\n}\n\nexport const getImporters = id => importersMap[id]\n\nexport const getError = id => errors[id]\n","import { forgetDeps, getImporters, getError } from './deps-map'\nimport { serial } from './utils'\n\nlet queue = []\nlet queueMap = {}\n\nconst hotStates = {}\n\nconst globalState = {\n  beforeUpdateCallbacks: {},\n  afterUpdateCallbacks: {},\n}\n\nclass HotState {\n  // data: undefined\n  // acceptCallback: null\n  // disposeCallback: null\n\n  constructor(id) {\n    this.id = id\n  }\n\n  dispose(cb) {\n    this.disposeCallback = cb\n  }\n\n  accept(cb = true) {\n    this.acceptCallback = cb\n  }\n\n  beforeUpdate(cb) {\n    globalState.beforeUpdateCallbacks[this.id] = cb\n  }\n\n  afterUpdate(cb) {\n    globalState.afterUpdateCallbacks[this.id] = cb\n  }\n}\n\nconst getHotState = id => {\n  const existing = hotStates[id]\n  if (existing) {\n    return existing\n  }\n  const state = new HotState(id)\n  hotStates[id] = state\n  return state\n}\n\nexport const createHotContext = id => getHotState(id)\n\nconst invalidate = (id, reload = false, rerun = true, from) => {\n  let item = queueMap[id]\n  if (item) {\n    if (reload) {\n      item.reload = true\n    } else if (rerun) {\n      item.rerun = true\n    }\n    queue.splice(queue.indexOf(item), 1)\n    queue.push(item)\n  } else {\n    item = { id, reload, rerun }\n    queueMap[id] = item\n    queue.push(item)\n  }\n  if (from != null) {\n    if (!item.changedDeps) item.changedDeps = new Set()\n    item.changedDeps.add(from)\n  }\n}\n\nconst scheduleRerun = (id, from) => invalidate(id, false, true, from)\n\nconst scheduleReload = (id, from) => invalidate(id, true, true, from)\n\nexport const flush = serial(async function doFlush() {\n  const currentQueue = queue\n\n  queue = []\n  queueMap = {}\n\n  const moduleErrors = []\n  const acceptErrors = []\n\n  // do all reload/rerun after dispose phase\n  const reloadQueue = []\n\n  const beforeUpdateCallbacks = Object.values(globalState.beforeUpdateCallbacks)\n  const afterUpdateCallbacks = Object.values(globalState.afterUpdateCallbacks)\n\n  for (const cb of beforeUpdateCallbacks) {\n    await cb()\n  }\n\n  // for (const { id, reload, rerun } of currentQueue) {\n  for (const { id, reload: realReload, rerun, changedDeps } of currentQueue) {\n    // TODO rerun is implemented as reload for now, short of a better solution\n    const reload = realReload || rerun\n    const state = getHotState(id)\n    const acceptCallback = state.acceptCallback\n    const disposeCallback = state.disposeCallback\n    if (reload || rerun) {\n      delete globalState.afterUpdateCallbacks[id]\n      delete globalState.beforeUpdateCallbacks[id]\n      delete state.acceptCallback\n      delete state.disposeCallback\n      if (reload) {\n        forgetDeps(id)\n      }\n      // aligned with Webpack:\n      // - module.hot.data is undefined on initial module load\n      // - module.hot.data defaults to {} after a HMR update, even if the\n      //   module has no dispose handlers\n      state.data = {}\n    }\n    if (typeof disposeCallback === 'function') {\n      await disposeCallback(state.data)\n    }\n    if (reload) {\n      reloadQueue.push(async () => {\n        try {\n          await System.reload(id)\n          const error = getError(id)\n          if (error) {\n            moduleErrors.push({ id, error })\n          } else {\n            const acceptData = {\n              id,\n              // changedDeps,\n              bubbled: Boolean(changedDeps && changedDeps.size > 0),\n            }\n            if (typeof acceptCallback === 'function') {\n              try {\n                await acceptCallback(acceptData)\n              } catch (error) {\n                acceptErrors.push({ id, error })\n              }\n            }\n          }\n        } catch (error) {\n          moduleErrors.push({ id, error })\n        }\n      })\n    } else if (rerun) {\n      throw new Error('TODO')\n    } else {\n      System.delete(id)\n    }\n  }\n\n  for (const reload of reloadQueue) {\n    await reload()\n  }\n\n  for (const cb of afterUpdateCallbacks) {\n    await cb()\n  }\n\n  const total = moduleErrors.length + acceptErrors.length\n  const errors =\n    total === 0\n      ? null\n      : {\n          module: moduleErrors.length > 0 ? moduleErrors : null,\n          accept: acceptErrors.length > 0 ? acceptErrors : null,\n        }\n\n  return { errors }\n})\n\nexport const applyUpdate = (id, forceReload = false, from = null) => {\n  const parentIds = getImporters(id)\n\n  if (forceReload) {\n    scheduleReload(id, from)\n  } else {\n    scheduleRerun(id, from)\n  }\n\n  const accepted = getHotState(id).acceptCallback\n  if (accepted) {\n    return true\n  }\n\n  if (!parentIds) {\n    return false\n  }\n\n  let every = true\n  for (const pid of parentIds) {\n    // TODO these modules don't need a reload, just refreshing their\n    //      bindings + execute again\n    const accepted = applyUpdate(pid, false, id)\n    if (!accepted) {\n      every = false\n    }\n  }\n\n  return every\n}\n","export const serial = handler => {\n  let promise\n  return () => (promise = promise ? promise.then(handler) : handler())\n}\n","const removeElement = el => el && el.parentNode && el.parentNode.removeChild(el)\n\nconst ErrorOverlay = () => {\n  let errors = []\n  let compileError = null\n\n  const errorsTitle = 'Failed to init module'\n  const compileErrorTitle = 'Failed to compile'\n\n  const style = {\n    section: `\n      position: fixed;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      padding: 32px;\n      background: rgba(0, 0, 0, .85);\n      font-family: Menlo, Consolas, monospace;\n      font-size: large;\n      color: rgb(232, 232, 232);\n      overflow: auto;\n      z-index: 2147483647;\n    `,\n    h1: `\n      margin-top: 0;\n      color: #E36049;\n      font-size: large;\n      font-weight: normal;\n    `,\n    h2: `\n      margin: 32px 0 0;\n      font-size: large;\n      font-weight: normal;\n    `,\n    pre: ``,\n  }\n\n  const createOverlay = () => {\n    const h1 = document.createElement('h1')\n    h1.style = style.h1\n    const section = document.createElement('section')\n    section.appendChild(h1)\n    section.style = style.section\n    const body = document.createElement('div')\n    section.appendChild(body)\n    return { h1, el: section, body }\n  }\n\n  const setTitle = title => {\n    overlay.h1.textContent = title\n  }\n\n  const show = () => {\n    const { el } = overlay\n    if (!el.parentNode) {\n      const target = document.body\n      target.appendChild(overlay.el)\n    }\n  }\n\n  const hide = () => {\n    const { el } = overlay\n    if (el.parentNode) {\n      overlay.el.remove()\n    }\n  }\n\n  const update = () => {\n    if (compileError) {\n      overlay.body.innerHTML = ''\n      setTitle(compileErrorTitle)\n      const errorEl = renderError(compileError)\n      overlay.body.appendChild(errorEl)\n      show()\n    } else if (errors.length > 0) {\n      overlay.body.innerHTML = ''\n      setTitle(errorsTitle)\n      errors.forEach(({ title, message }) => {\n        const errorEl = renderError(message, title)\n        overlay.body.appendChild(errorEl)\n      })\n      show()\n    } else {\n      hide()\n    }\n  }\n\n  const renderError = (message, title) => {\n    const div = document.createElement('div')\n    if (title) {\n      const h2 = document.createElement('h2')\n      h2.textContent = title\n      h2.style = style.h2\n      div.appendChild(h2)\n    }\n    const pre = document.createElement('pre')\n    pre.textContent = message\n    div.appendChild(pre)\n    return div\n  }\n\n  const addError = (error, title) => {\n    const message = (error && error.stack) || error\n    errors.push({ title, message })\n    update()\n  }\n\n  const clearErrors = () => {\n    errors.forEach(({ element }) => {\n      removeElement(element)\n    })\n    errors = []\n    update()\n  }\n\n  const setCompileError = message => {\n    compileError = message\n    update()\n  }\n\n  const overlay = createOverlay()\n\n  return {\n    addError,\n    clearErrors,\n    setCompileError,\n  }\n}\n\nexport default ErrorOverlay\n","/* eslint-disable no-console */\nconst logPrefix = '[HMR]'\n\nexport const verbose = console.debug.bind(console, logPrefix)\n\nexport const log = console.log.bind(console, logPrefix)\n\nexport const warn = console.warn.bind(console, logPrefix)\n\nexport const error = console.error.bind(console, logPrefix)\n\nexport const clear = console.clear.bind(console)\n","import ErrorOverlay from './overlay'\n\nimport * as log from './log'\nimport { applyUpdate, flush } from './hot'\n\nconst reloadDefaults = {\n  unaccepted: true,\n  moduleError: 'defer',\n  acceptError: true,\n  error: true,\n  reconnect: true,\n}\n\nexport default ({\n  hot: isHot = true,\n  ws: useWebSocket,\n  host,\n  port = 33440,\n  reload: reloadOption = true,\n}) => {\n  let autoAccept = true\n  let conn\n\n  const reloadOn = reloadOption\n    ? {\n        ...reloadDefaults,\n        ...reloadOption,\n      }\n    : false\n\n  let deferredFullReload = false\n\n  const resolveHost = () => {\n    // NOTE special treatment for codesandbox.io: our local port is redirect to\n    // custom domain name [hash]-[port].codesandbox.io (on default HTTPS port,\n    // so we don't need to specifiy it with SSE -- WS not supported)\n    const match = /^([^.]+)(.*\\.codesandbox\\.io)$/.exec(location.hostname)\n    if (match) {\n      return `${match[1]}-${port}${match[2]}`\n    }\n    return `${host || location.hostname}:${port}`\n  }\n\n  const wsUrl = resolveHost()\n\n  let clearConsole = false\n  let rootUrl\n\n  const overlay = ErrorOverlay()\n\n  if (typeof window !== 'undefined') {\n    window.addEventListener('unload', () => {\n      if (conn) {\n        conn.close()\n        conn = null\n      }\n    })\n  }\n\n  const unresolve = id => {\n    const baseUrl = rootUrl || location.origin + '/'\n    const pre = String(id).slice(0, baseUrl.length)\n    if (pre === baseUrl) {\n      return String(id).slice(baseUrl.length)\n    } else {\n      return id\n    }\n  }\n\n  const doReload = () => {\n    if (typeof window !== 'undefined') {\n      window.location.reload()\n    } else {\n      log.warn('Full reload required')\n    }\n  }\n\n  const doFullReload = (flag, msg) => {\n    if (flag === 'defer') {\n      deferredFullReload = true\n      const action = 'full reload on next update'\n      log.log(`${msg}: ${action}`)\n      return false\n    } else if (flag) {\n      if (deferredFullReload) {\n        // deferred reload takes precedence because the rationale is that there\n        // is still something broken in user's code and reloading now would just\n        // throw the same error again (nominal case of deferred reload is when\n        // a module body cannot be executed)\n        const action = 'full reload already scheduled on next update'\n        log.log(`${msg}: ${action}`)\n        return false\n      } else {\n        const action = 'full reload'\n        // yes, the log message is only visible with something like \"preserve log\"\n        log.log(`${msg}: ${action}`)\n        doReload()\n        return true\n      }\n    } else {\n      const action = 'full reload required'\n      log.log(`${msg}: ${action}`)\n      return false\n    }\n  }\n\n  const reloadUnaccepted = msg => doFullReload(reloadOn.unaccepted, msg)\n  const reloadModule = msg => doFullReload(reloadOn.moduleError, msg)\n  const reloadAccept = msg => doFullReload(reloadOn.acceptError, msg)\n  const reloadError = msg => doFullReload(reloadOn.error, msg)\n  const reloadReconnect = msg => doFullReload(reloadOn.reconnect, msg)\n\n  const applyOptions = opts => {\n    clearConsole = opts.clearConsole\n\n    // The entrypoints will use the address of the user's HTTP server (e.g.\n    // localhost), because they're always written to disk where the user expects\n    // them to be, and so they're served by the user controlled server.\n    //\n    // @hot files will either be served by the same server, OR the hot plugin\n    // in-memory file server (e.g. 127.0.0.1)\n    //\n    // Host name for the user's HTTP server is determined from the URL the user\n    // has typed in their address bar (e.g. localhost).\n    //\n    // Host name of the WS server can be known precisely since, contrary to the\n    // user's server, we control it. The host name is determined automatically\n    // with `getAddress` and is most likely the IP (e.g. 127.0.0.1, even if the\n    // user will more probably type 'localhost').\n    //\n    // Theoretically, the entrypoint files can never change during a normal HMR\n    // session. They're just wrappers to inject HMR runtime and point to the\n    // actual module under in the @hot files.\n    //\n    // Module ids in updates are relative to the domain root.\n    //\n    // In conclusion: we need to resolve module ids from the WS server base URL\n    // if and only if files are served from memory (i.e. WS server).\n    //\n    if (opts.inMemory) {\n      rootUrl = `${location.protocol}//${wsUrl}/`\n    }\n\n    if (opts.hasOwnProperty('autoAccept')) {\n      autoAccept = opts.autoAccept\n    }\n\n    if (opts.reload === false) {\n      Object.keys(reloadOn).forEach(key => {\n        reloadOn[key] = false\n      })\n    } else {\n      Object.assign(reloadOn, opts.reload)\n    }\n  }\n\n  const applyAccepted = async accepted => {\n    if (!accepted) {\n      if (autoAccept) {\n        log.verbose(\n          'Update has not been accepted: hot reloading all the things'\n        )\n      } else {\n        reloadUnaccepted('Update has not been accepted')\n        return\n      }\n    }\n\n    const { errors } = await flush()\n\n    overlay.setCompileError(null)\n    overlay.clearErrors()\n\n    if (clearConsole) {\n      log.clear()\n    }\n\n    if (errors) {\n      // error(s) on sync run of module body\n      if (errors.module) {\n        for (const { id, error } of errors.module) {\n          log.error(`Error during reloaded module init: ${id}\\n`, error)\n        }\n        const reloading = reloadModule('Error during reloaded module init')\n        // !reload: no overlay if reload has been triggered\n        // deferredFullReload: overlay would be tro disruptive if reload=false\n        if (!reloading && deferredFullReload) {\n          for (const { id, error } of errors.module) {\n            overlay.addError(error, unresolve(id))\n          }\n        }\n      }\n      // error(s) in accept callbacks\n      if (errors.accept) {\n        for (const { id, error } of errors.accept) {\n          log.error(`Failed to accept update to module ${id}\\n`, error)\n        }\n        const reloading = reloadAccept('Failed to accept update')\n        // !error.module: don't mix with module errors; module errors are\n        // displayed first because the accept error is probably a consequence\n        // of the module error\n        if (!reloading && deferredFullReload && !errors.module) {\n          for (const { id, error } of errors.accept) {\n            overlay.addError(error, unresolve(id))\n          }\n        }\n      }\n    }\n\n    if (!errors) {\n      log.log('Up to date')\n    }\n  }\n\n  const acceptChanges = changes => {\n    const allAccepted = changes\n      .map(name => System.resolve(name, rootUrl))\n      .filter(id => {\n        if (!System.has(id)) {\n          // no warning: it can happen with dynamic import() that rollup bundles\n          // files that the browser doesn't load\n          //   log.warn(`Detected change to unknown module: ${id}`)\n          return false\n        }\n        return System.has(id)\n      })\n      .map(id => {\n        try {\n          return applyUpdate(id, true)\n        } catch (err) {\n          overlay.addError(err)\n          throw err\n        }\n      })\n\n    // we're ignoring change to unused modules -- this is needed for no-bundle\n    // settings where we'll be getting events for files that are not currently\n    // loaded in the browser (or even not used in the project)\n    return allAccepted.length === 0 || allAccepted.every(Boolean)\n  }\n\n  const handleApplyAcceptError = err => {\n    log.error((err && err.stack) || err)\n    const reloading = reloadError('Failed to apply update')\n    if (!reloading) {\n      overlay.addError(err)\n    }\n  }\n\n  const processRemoved = removed => {\n    removed\n      .map(name => System.resolve(name, rootUrl))\n      .filter(id => {\n        if (!System.has(id)) {\n          // no warning: it can happen with dynamic import() that rollup bundles\n          // files that the browser doesn't load\n          //   log.warn(`Detected change to unknown module: ${id}`)\n          return false\n        }\n        return System.has(id)\n      })\n      .forEach(id => {\n        System.delete(id)\n      })\n  }\n\n  let _changes = []\n  let flushing = false\n\n  const processChanges = changes => {\n    if (flushing) {\n      _changes = [...new Set(changes)]\n      return\n    }\n\n    if (deferredFullReload) {\n      log.log('Reloading...')\n      doReload()\n      return\n    }\n\n    if (changes.length === 0) {\n      log.log('Nothing changed')\n      return\n    }\n\n    log.verbose('Apply changes...')\n\n    const accepted = acceptChanges(changes)\n\n    flushing = true\n\n    return applyAccepted(accepted)\n      .catch(handleApplyAcceptError)\n      .finally(() => {\n        flushing = false\n        const pendingChanges = _changes\n        _changes = []\n        if (pendingChanges.length > 0) processChanges(pendingChanges)\n      })\n  }\n\n  let tethered = false\n\n  const onMessage = e => {\n    const hot = JSON.parse(e.data)\n\n    if (hot.greeting) {\n      // was waiting for an update before reload, and server has restarted...\n      // => reload!\n      if (deferredFullReload) {\n        log.log('Reloading...')\n        doReload()\n        return\n      }\n\n      if (tethered) {\n        // getting greated again means the server has been restarted. although\n        // HMR would resume updating (with SSE), anything could have happened\n        // when the server was off and it's most likely something _did_ happen\n        // (otherwise, why the Rollup restart?)... let's be conservative and do\n        // a full reload (would love to HOT reload everything to showcase\n        // SystemJS power but that's kind of out of scope for now)\n        const reloading = reloadReconnect('Server is back')\n        if (reloading) return\n      }\n\n      applyOptions(hot.greeting)\n\n      tethered = true\n      // log last: \"Enabled\" means we're up and running\n      log.log(isHot ? 'Connected' : 'Connected (live reload)')\n    }\n\n    if (hot.status) {\n      switch (hot.status) {\n        case 'prepare':\n          log.log('Rebuilding...')\n          break\n      }\n    }\n\n    if (hot.forget) processRemoved(hot.forget)\n    if (hot.changes) processChanges(hot.changes)\n\n    if (hot.errors) {\n      const { build } = hot.errors\n      if (build) {\n        log.log('Build error!')\n        overlay.setCompileError(build.formatted || build)\n      }\n    }\n\n    if (hot.reload) {\n      let msg = 'Full reload required'\n      if (hot.reload.reason) {\n        msg += `: ${hot.reload.reason}`\n      }\n      log.log(msg)\n      doReload()\n    }\n  }\n\n  if (useWebSocket) {\n    const ws = new WebSocket(`ws://${wsUrl}`)\n    conn = ws\n    ws.onmessage = onMessage\n  } else {\n    const source = new EventSource(`//${wsUrl}/~hot`)\n    conn = source\n    source.onmessage = onMessage\n    source.onerror = () => {\n      log.warn('Connection lost')\n      // e.preventDefault()\n      // ignore subsequent errors (will reload when connection resumes)\n      source.onerror = () => {}\n    }\n  }\n}\n","import 'systemjs/dist/system.js'\n\nimport { gid } from '../lib/constants'\n\nimport installSystemHooks from './system-hooks'\nimport createWebSocketClient from './client'\n\nconst resolveAddress = () => {\n  const g =\n    (typeof window !== 'undefined' && window) ||\n    // eslint-disable-next-line no-undef\n    (typeof global !== 'undefined' && global)\n  const { host, port, ws, hot } = g[gid]\n  return { host, port, ws, hot }\n}\n\nconst { host, port, ws, hot } = resolveAddress()\n\ninstallSystemHooks()\n\ncreateWebSocketClient({ host, port, ws, hot })\n","import { setDeps } from './deps-map'\nimport { createHotContext } from './hot'\n\nexport default () => {\n  const proto = System.constructor.prototype\n\n  const createContext = proto.createContext\n  proto.createContext = function(...args) {\n    const [url] = args\n    return {\n      ...createContext.apply(this, args),\n      hot: createHotContext(url),\n    }\n  }\n\n  const onload = proto.onload\n  proto.onload = function(...args) {\n    const [err, id, deps] = args\n    setDeps(err, id, deps)\n    return onload.apply(this, args)\n  }\n}\n"],"names":["hasSelf","self","hasDocument","document","envGlobal","global","baseUrl","baseEl","querySelector","href","location","split","lastSepIndex","lastIndexOf","slice","backslashRegEx","resolveIfNotPlainOrUrl","relUrl","parentUrl","indexOf","replace","length","parentProtocol","pathname","segmented","output","segmentIndex","i","push","pop","join","resolveUrl","objectAssign","to","from","p","resolveAndComposePackages","packages","outPackages","parentMap","rhs","mapped","resolveImportMap","targetWarning","getMatch","path","matchObj","sepIndex","segment","applyPackages","id","pkgName","pkg","match","target","msg","console","warn","importMap","resolvedOrPlain","scopeUrl","scopes","packageResolution","imports","hasSymbol","Symbol","toStringTag","REGISTRY","SystemJS","this","systemJSPrototype","prototype","loadToId","load","triggerOnload","loader","err","onload","d","map","lastRegister","prepareImport","import","Promise","resolve","then","getOrCreateLoad","firstParentUrl","importerSetters","ns","Object","create","defineProperty","value","instantiatePromise","instantiate","registration","Error","declared","name","h","changed","importId","meta","createContext","undefined","e","execute","setters","catch","linkPromise","instantiation","all","dep","setter","depId","depLoad","I","n","depLoads","er","L","E","C","instantiateAll","loaded","postOrderExec","seen","depLoadPromises","forEach","depLoadPromise","doExec","execPromise","call","nullContext","topLevelLoad","parentId","url","register","deps","declare","getRegister","_lastRegister","freeze","System","systemRegister","loadScriptModules","querySelectorAll","script","src","reject","windowErrorListener","evt","filename","error","window","addEventListener","createElement","charset","async","crossOrigin","removeEventListener","head","removeChild","appendChild","importScripts","constructor","firstGlobalProp","secondGlobalProp","lastGlobalProp","noteGlobalProps","hasOwnProperty","isNaN","impt","apply","arguments","emptyInstantiation","globalProp","lastProp","cnt","getGlobalProp","globalExport","_export","default","__useDefault","parent","ext","loadDynamicModule","source","stylesheet","CSSStyleSheet","replaceSync","getSourceRes","res","maybeJSFallback","loadError","JSON","parse","WebAssembly","compileStreaming","arrayBuffer","compile","module","importObj","Module","key","m","instance","exports","fetch","ok","status","statusText","contentType","headers","get","text","eval","createExec","importMapPromise","Array","_j","json","resp","innerHTML","outMap","s","resolvedScope","resolveAndComposeImportMap","throwUnresolved","toStringTag$1","getLoad","set","assign","done","has","delete","registry","importerIndex","splice","iterator","entries","keys","index","result","next","lastUpdateFunction","reload","update","onResolved","depsMap","importersMap","errors","setDeps","existing","Set","getImporterEntry","add","forgetDeps","importerDeps","getError","queue","queueMap","hotStates","globalState","beforeUpdateCallbacks","afterUpdateCallbacks","HotState","[object Object]","cb","disposeCallback","acceptCallback","getHotState","state","invalidate","rerun","item","changedDeps","flush","handler","promise","serial","currentQueue","moduleErrors","acceptErrors","reloadQueue","values","realReload","data","acceptData","bubbled","Boolean","size","accept","applyUpdate","forceReload","parentIds","getImporters","scheduleReload","scheduleRerun","every","pid","ErrorOverlay","compileError","style","section","h1","h2","pre","setTitle","title","overlay","textContent","show","el","parentNode","body","errorEl","renderError","message","remove","hide","div","createOverlay","addError","stack","clearErrors","element","setCompileError","verbose","debug","bind","log","clear","reloadDefaults","unaccepted","moduleError","acceptError","reconnect","host","port","ws","hot","g","gid","resolveAddress","proto","args","installSystemHooks","isHot","useWebSocket","reloadOption","conn","autoAccept","reloadOn","deferredFullReload","wsUrl","exec","hostname","resolveHost","rootUrl","clearConsole","close","unresolve","origin","String","doReload","log.warn","doFullReload","flag","log.log","applyAccepted","accepted","log.verbose","log.clear","log.error","reloadModule","reloadAccept","handleApplyAcceptError","_changes","flushing","processChanges","changes","allAccepted","filter","acceptChanges","finally","pendingChanges","tethered","onMessage","greeting","opts","inMemory","protocol","forget","build","formatted","reason","WebSocket","onmessage","EventSource","onerror","createWebSocketClient"],"mappings":"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"}