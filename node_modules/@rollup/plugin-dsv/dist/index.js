'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var path = require('path');
var d3Dsv = require('d3-dsv');
var toSource = _interopDefault(require('tosource'));
var pluginutils = require('@rollup/pluginutils');

const parsers = { '.csv': d3Dsv.csvParse, '.tsv': d3Dsv.tsvParse };

function dsv(options = {}) {
  const filter = pluginutils.createFilter(options.include, options.exclude);

  return {
    name: 'dsv',

    transform(code, id) {
      if (!filter(id)) return null;

      const ext = path.extname(id);
      if (!(ext in parsers)) return null;

      let rows = parsers[ext](code);

      if (options.processRow) {
        rows = rows.map((row) => options.processRow(row, id) || row);
      }

      return {
        code: `export default ${toSource(rows)};`,
        map: { mappings: '' }
      };
    }
  };
}

module.exports = dsv;
