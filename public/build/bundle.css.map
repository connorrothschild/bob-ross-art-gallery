{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "Brush.svelte",
    "Card.svelte",
    "Hero.svelte",
    "Main.svelte",
    "Scrubber.svelte",
    "Shuffler.svelte",
    "Footer.svelte",
    "Header.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import { scaleLinear } from 'd3-scale';\n    import { pannable } from '../utils/pannable.js';\n    import data from '../data/bob_ross_paintings.csv';\n    import { ind } from '../stores/global.js';\n\n    export const padding = { top: 100, right: 0, bottom: 10, left: 0 };\n\n    export let width, height; \n\n    var leftmin = padding.right;\n    $:leftmax = width - padding.right - handlewidth;\n\n    let left = padding.right;\n    \n    let handlewidth = 5;\n\n    $:xScale = scaleLinear()\n\t\t.domain([0, width])\n        .range([0, data.length - 1]);\n        \n\tfunction handlePanLeft(event) {\n        var x = left + event.detail.dx;\n        if (x > leftmin && x < leftmax)\n        {\n            left = x;\n            let i = Math.round(xScale(x));\n            ind.set(i);\n        }\n    }\n\n    \n</script>\n\n    <g class=\"brush\" fill=\"none\" pointer-events=\"all\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\">\n        <rect \n            use:pannable\n\t        on:panmove={handlePanLeft}\n            class=\"handle handle--w\" \n            cursor=\"ew-resize\" \n            x=\"{left}\" \n            y=\"0\"\n            width=\"5\" \n            height=\"{height}\">\n        </rect>\n    </g>\n\n<style>\n.handle {\n    visibility: visible;\n    stroke: rgba(61, 61, 62, .9);\n    stroke-width: 1px;\n    fill: plum;\n}</style>",
    "<script>\nimport { fade } from \"svelte/transition\";\n\nexport let data;\nexport let colors;\n\n</script>\n\n<div class='card'>\n    <a href=\"{data.youtube_src}\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <img src={data.img_src} alt=\"A painting titled {data.painting_title}\"/>\n    </a>\n    <h1>{data.painting_title}</h1>\n    <h3 style=\"margin-top: 0\">Season {data.season}, episode {data.episode}</h3>\n\n    <div class='color-container'>\n        {#each colors as { color, hex, text_color }}\n            <div style=\"background: {hex}; color: {text_color}\" class=\"color-label\"> {color} </div>\n        {/each}\n    </div>    \n    <!-- {#each colors as { color, hex, text_color }}\n\t<div> \n        <span style=\"text-decoration: underline; text-decoration-color: {hex};\">{color}</span>\n        <svg width=\"10\" height=\"10\">\n            <circle cx=\"50%\" cy=\"50%\" r=\"5\" fill=\"{hex}\"/>\n        </svg>\n    </div>\n\t{/each} -->\n</div>\n\n<style>\n\n.card {\n   display:flex;\n   flex-direction: column;\n   align-items: center;\n   min-height: 500px;\n}\n\n.color-container {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    flex-wrap: wrap;\n}\n\n.color-label {\n    display: inline-block;\n    padding: 10px;\n    margin: 5px;\n    border-radius: 5px;\n    box-shadow: 1px 1px 5px 1px #ccc;\n    font-size: .9rem;\n}</style>",
    "<script>\n  import copyData from \"../data/copy.json\";\n</script>\n\n<div class='hero-background'>\n  <div class=\"hero\">\n    <h1 class=\"headline\">{copyData.headline}</h1>\n    <h2 class=\"subtitle\">{copyData.subtitle}</h2>\n    <h3>{@html copyData.attribution}</h3>\n  </div>\n</div>\n\n<style>\n\n  .hero-background {\n    background: #1da1f290;\n    background: linear-gradient(#1da1f290, white);\n  }\n\n  .hero {\n    text-align: center;\n    min-height: 90vh;\n    display: flex;\n    flex-direction: column;\n    max-width: 1000px;\n    margin: 0 auto;\n  }\n\n  .headline {\n    margin-top: 5rem;\n    text-transform: uppercase;\n    font-weight: 900;\n    font-size: 5rem;\n  }\n\n  .subtitle {\n    font-size: 2.5rem;\n    color: #353535;\n  }</style>\n",
    "<script>\n  import Hero from \"./Hero.svelte\";\n  import Shuffler from \"./Shuffler.svelte\";\n  import { processData } from \"../utils/process.js\"\n\n  import copyData from \"../data/copy.json\";\n  import data from '../data/bob_ross_paintings.csv';\n\n  processData(data)\n\n  console.log(data);\n</script>\n\n<Hero />\n\n<section class='prose'>\n  <p>{copyData.paragraph1}</p>\n</section>\n\n<section class='visual'>\n  <Shuffler data=\"{data}\"/>\n</section>\n\n<style lang=\"scss\">section {\n  padding: 1rem;\n  margin: 0 auto; }\n  section.prose {\n    max-width: 78ch; }\n  section.visual {\n    max-width: 800px; }\n\n/* td:nth-child(2),\n  th:nth-child(2) {\n    text-align: right;\n    padding: 0.5em;\n  } */</style>\n",
    "<script>\n\timport * as d3 from 'd3';\n    import * as _ from 'lodash'\n    import Brush from './Brush.svelte';\n    import data from '../data/colors_long.csv';\n    import { processData } from \"../utils/process.js\";\n\n    processData(data, true)\n\n    const unique_colors = new Set([... data.map(d => d.colors)]).size;\n    const num_paintings = 403 // d3.max(data.map(d => d.painting_index));\n\n\tconst padding = { top: 0, right: 0, bottom: 0, left: 0 };\n    \n    let width=1000;\n    let height=100;\n\n\t$: xScale = d3.scaleLinear()\n\t\t.domain([0, num_paintings])\n\t\t.range([padding.left, width - padding.right]);\n\n\t$: yScale = d3.scaleBand()\n\t\t.domain(data.map(d => d.color_hex))\n\t\t.range([height - padding.bottom, padding.top]);\n</script>\n\n<div \n    class=\"chart\"\n    bind:offsetWidth={width}\n    bind:offsetHeight={height}\n>\n\t<svg style=\"width: 100%;\">\n\n        {#each data as d}\n            <rect width=\"{width/num_paintings}\" \n                  height=\"{height/unique_colors}\" \n                  fill={d.color_hex} \n                  x={xScale(d.painting_index)} \n                  y={yScale(d.color_hex)}></rect>\n        {/each}\n\n        <Brush {width} {height} />\n\t</svg>\n</div>\n\n<style>\n.chart {\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n}</style>\n",
    "<script>\n  import Card from \"./Card.svelte\";\n  import Scrubber from \"./Scrubber.svelte\";\n  import { ind } from '../stores/global.js';\n\n  export let data;\n\n  // How many art pieces there are in the dataset\n  const LENGTH = data.length + 1;\n\n  // The selected art piece\n  let selected = [];\n  // The selected art piece's colors\n  let colors = [];\n  // The index of the art piece\n  // let ind = 0;\n  // How many colors there are in the selected art piece\n  let colors_length = 0;\n\n  function getTextColor(bgColor) {\n  if (!bgColor) { return ''; }\n      return (parseInt(bgColor.replace('#', ''), 16) > 0xffffff / 2) ? '#000' : '#fff';\n  }\n\n  function selectRandom() {\n    ind.set(Math.floor(Math.random() * LENGTH))\n  }\n\n  function decrement() {\n    ind.update(n => n - 1)\n  }\n\n  function increment() {\n    ind.update(n => n + 1)\n  }\n\n  \n  $: {\n    // Bound ind by the upper limit (data.length) and by 0\n    // ind.set(ind > LENGTH | ind < 0 ? 0 : ind)\n    selected = data[$ind] ? data[$ind] : data[0];\n    \n    // Grab how many colors for the for loop below\n    // (The cell value for selected.colors is an array formatted as a string)\n    colors_length = selected.colors.length;\n\n    // Reset colors to be blank lest duplication occur\n    colors = [];\n        \n    // The cell value for selected.colors and selected.color_hex is an array formatted as a string\n    for (let i = 0; i < colors_length; i++) {\n      colors[i] = {color: selected.colors[i], hex: selected.color_hex[i]}\n    }\n    \n    // Apply text color function to get proper text color based on background\n    colors.forEach(function(d) {\n      d.text_color = getTextColor(d.hex)\n    })\n  }\n</script>\n\n<div class=\"button-container\">\n  <button on:click={decrement}>Previous</button>\n  <button on:click={selectRandom}>Random!</button>\n  <button on:click={increment}>Next</button>\n</div>\n\n<Card data=\"{selected}\" colors=\"{colors}\" />\n<Scrubber/>\n\n<style>\n  .button-container {\n    text-align: center;\n    margin-bottom: 1rem;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n  }</style>\n",
    "<script>\n  import { onMount } from \"svelte\";\n  import wordmark from \"../../svg/pudding/wordmark.svg\";\n</script>\n\n<footer>\n  <section class=\"about\">\n    <div class=\"wordmark\">\n      {@html wordmark}\n    </div>\n    <p>\n      <a href=\"https://pudding.cool\">The Pudding</a>\n      is a digital publication that explains ideas debated in culture with visual\n      essays.\n    </p>\n  </section>\n</footer>\n\n<style>\n  footer {\n    background-color: var(--text-main);\n    color: var(--background-body);\n    font-family: var(--sans);\n    padding: 3em 1em;\n    margin-top: 3em;\n  }\n\n  a,\n  a:visited,\n  a:hover {\n    color: var(--background-body);\n  }\n\n  .wordmark {\n    max-width: 10em;\n    margin: 1em auto;\n  }\n\n  .about {\n    margin: 3rem auto;\n    margin-top: 0;\n    text-align: center;\n  }</style>\n",
    "<script>\n  import wordmark from \"../../svg/pudding/wordmark.svg\";\n</script>\n\n<header>\n  <div class=\"wordmark\">\n    <a href=\"https://pudding.cool\">{@html wordmark}</a>\n  </div>\n</header>\n\n<style>\n  .wordmark {\n    max-width: 10em;\n    margin: 1em auto;\n  }\n\n  .wordmark a {\n    border: none;\n    color: var(--fg);\n  }\n\n  .wordmark a:hover {\n    background-color: transparent;\n  }\n\n  /* header {\n    background: #1da1f290;\n  } */</style>\n"
  ],
  "names": [],
  "mappings": "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"
}