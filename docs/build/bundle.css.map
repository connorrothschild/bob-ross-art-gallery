{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "Brush.svelte",
    "ColorViz.svelte",
    "ColorVizWrapper.svelte",
    "Gallery.svelte",
    "GalleryInformation.svelte",
    "GalleryPainting.svelte",
    "GridHistogram.svelte",
    "GridHistogramWrapper.svelte",
    "Main.svelte",
    "Icon.svelte",
    "Footer.svelte",
    "Hero.svelte",
    "Intro.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Meta from \"./Meta.svelte\";\n  import Window from \"./helpers/Window.svelte\";\n  import Main from \"./Main.svelte\";\n  import Footer from \"./prose/Footer.svelte\";\n</script>\n\n<Meta />\n\n<Window />\n\n<Main />\n\n<Footer />\n\n<style lang=\"scss\" global>:global(html) {\n  scroll-behavior: smooth; }\n\n:global(.highlight-text) {\n  font-weight: 600;\n  padding: 3px;\n  border-radius: 3px;\n  /* white-space: nowrap; */\n  display: inline-block;\n  background: steelblue;\n  background: linear-gradient(to left, white 50%, steelblue 50%) right;\n  background-size: 200% 1.2em;\n  transition: 1s ease-out 200ms; }\n\n/* SCROLLAMA */\n:global(.chart) {\n  border: none;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-top: 30px; }\n\n:global(.step) {\n  padding: 3%;\n  width: 90%;\n  margin: 30rem auto;\n  background-color: whitesmoke;\n  border-left: 2px solid #cecece;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: #cecece;\n  text-align: center;\n  line-height: 1.5;\n  z-index: 999;\n  opacity: 0.85;\n  transition: 500ms all ease; }\n  :global(.step.active) {\n    color: black;\n    border-left: 2px solid black;\n    box-shadow: 1px 1px 7px 1px rgba(0, 0, 0, 0.12);\n    opacity: 1;\n    pointer-events: auto;\n    background: white; }\n    :global(.step.active) :global(.highlight) {\n      color: white;\n      background-position: left; }\n\n:global(.scrollama-container) {\n  display: flex;\n  flex-direction: row-reverse;\n  margin-bottom: 500px; }\n  :global(.scrollama-container) :global(.scrollama-graphic) {\n    flex: 2;\n    height: 95%; }\n  :global(.scrollama-container) :global(.scrollama-steps) {\n    flex: 1;\n    z-index: 1000;\n    pointer-events: none; }\n  @media screen and (max-width: 968px) {\n    :global(.scrollama-container) {\n      flex-direction: column; } }\n\n:global(.scrollama-graphic) {\n  position: -webkit-sticky;\n  position: sticky;\n  top: 0; }</style>\n",
    "<script>\n  import { scaleLinear } from \"d3-scale\";\n  import { pannable } from \"../utils/pannable.js\";\n  import { ind } from \"../stores/global.js\";\n\n  export let width, height;\n\n  // const padding = { top: 0, right: 10, bottom: 0, left: 10 };\n  const handlewidth = 5;\n  const leftBound = -0.9;\n\n  $: rightBound = width;\n  $: pos = xScale.invert($ind);\n  $: xScale = scaleLinear().domain([0, width]).range([0, 403]);\n\n  function handleMove(event) {\n    var x = pos + event.detail.dx;\n    if (x > leftBound && x < rightBound) {\n      pos = x;\n      let i = Math.round(xScale(x));\n      ind.set(i);\n    }\n  }\n</script>\n\n<!-- <rect class=\"overlay\" pointer-events=\"all\" cursor=\"crosshair\" width=\"100%\" height=\"100%\" on:click={updatePan}></rect> -->\n\n<g\n  class=\"brush\"\n  fill=\"none\"\n  pointer-events=\"all\"\n  style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"\n>\n  <rect\n    use:pannable\n    on:panmove={handleMove}\n    class=\"handle\"\n    cursor=\"ew-resize\"\n    x={pos}\n    y=\"0\"\n    width={handlewidth}\n    {height}\n  />\n</g>\n\n<!-- <rect class=\"overlay\" pointer-events=\"all\" cursor=\"crosshair\" width=\"100%\" height=\"100%\" on:click={updatePan}></rect> -->\n<style>\n  .handle {\n    visibility: visible;\n    stroke: black;\n    stroke-width: 1px;\n    fill: whitesmoke;\n  }\n\n  /* .overlay {\n    fill: transparent;\n} */</style>\n",
    "<script>\n  import { fade } from \"svelte/transition\";\n  import * as d3 from \"d3\";\n\n  export let data, grouped, height, padding, xScaleBar, xTicks;\n\n  function handleMouseover(e) {\n    let d = e.target.attributes;\n    const tip = d3.select(\".timelineTip\");\n\n    if (d.num) {\n      tip.html(\n        `<p class='title' style=\"background: ${d.fill.value}; color: ${d.text_color.value}\">${d.background_color.value}<br>${d.num.value} uses</p>`\n      );\n    } else {\n      tip.html(\n        `<p class='title' style=\"background: ${d.fill.value}; color: ${d.text_color.value}\">${d.background_color.value}</p>`\n      );\n    }\n\n    tip\n      .style(\"opacity\", 1)\n      // Below handles offset on edges of screen\n      .style(\n        \"left\",\n        (e.screenX > window.innerWidth * 0.7 ? e.layerX - 130 : e.layerX) + \"px\"\n      )\n      .style(\"top\", e.layerY - 28 + \"px\");\n  }\n  function handleMouseout() {\n    d3.select(\".timelineTip\").style(\"opacity\", 0);\n  }\n\n  function handleTouch(e) {\n    let d = e.target.attributes;\n    const tip = d3.select(\".timelineTip\");\n\n    if (d.num) {\n      tip.html(\n        `<p class='title' style=\"background: ${d.fill.value}; color: ${d.text_color.value}\">${d.background_color.value}: ${d.num.value} uses</p>`\n      );\n    } else {\n      tip.html(\n        `<p class='title' style=\"background: ${d.fill.value}; color: ${d.text_color.value}\">${d.background_color.value}</p>`\n      );\n    }\n\n    const xPos = parseFloat(d.x.value);\n    const yPos = parseFloat(d.y.value);\n\n    tip\n      .style(\"opacity\", 1)\n      .style(\n        \"left\",\n        (xPos > window.innerWidth * 0.5 ? xPos - 125 : xPos + 25) + \"px\"\n      )\n      .style(\"top\", yPos - 25 + \"px\");\n  }\n</script>\n\n<!-- X AXIS -->\n<g\n  transform=\"translate({-padding.left}, {height -\n    padding.bottom -\n    padding.top})\"\n>\n  {#if xTicks}\n    {#each xTicks as x}\n      <g\n        class=\"tick\"\n        opacity=\"1\"\n        transform=\"translate({xScaleBar(x)},0)\"\n        transition:fade\n      >\n        <line stroke=\"#000\" y2=\"6\" y1={-height} />\n        <text fill=\"currentColor\" dy=\"1em\" y=\"9\" x={x == 0 ? 4 : null}>\n          {x}\n        </text>\n      </g>\n    {/each}\n  {/if}\n</g>\n\n<!-- CHART (BARCHART) -->\n<g>\n  {#each grouped as d}\n    <rect\n      class=\"colorBar\"\n      fill={d.key}\n      background_color={d.colors}\n      text_color={d.text_color}\n      num={d.value.length}\n      on:mouseover={handleMouseover}\n      on:mouseout={handleMouseout}\n      on:touchstart={handleTouch}\n      on:touchend={handleMouseout}\n    />\n  {/each}\n</g>\n\n<!-- CHART (TIMELINE VIEW) -->\n<g>\n  {#each data as d}\n    <rect\n      fill={d.color_hex}\n      background_color={d.colors}\n      text_color={d.text_color}\n      class=\"timelineRect\"\n      on:mouseover={handleMouseover}\n      on:mouseout={handleMouseout}\n      on:touchstart={handleTouch}\n      on:touchend={handleMouseout}\n    />\n  {/each}\n</g>\n\n<!-- CHART -->\n<style lang=\"scss\">text {\n  font-weight: 300;\n  text-anchor: middle; }\n\n.tick line {\n  stroke: #cecece80; }\n\n.tick text {\n  font-weight: 200; }\n  @media screen and (max-width: 768px) {\n    .tick text {\n      font-size: 0.75rem; } }</style>\n",
    "<script>\n  import * as d3 from \"d3\";\n  import { onMount } from \"svelte\";\n  import debounceFn from \"lodash.debounce\";\n  import mapToArray from \"../utils/mapToArray\";\n  import ColorViz from \"./ColorViz.svelte\";\n  import { windowWidth } from \"../stores/global.js\";\n\n  export let data, height;\n\n  let DELAY;\n\n  const padding = { top: 0, right: 15, bottom: 30, left: 15 };\n\n  $: width = null;\n  $: activeStep = 0;\n  $: lastResponse = null;\n\n  let currWindowWidth = $windowWidth;\n\n  // SCROLL!\n  onMount(async () => {\n    // instantiate the scrollama\n    const scroller = scrollama();\n\n    function handleStepEnter(response) {\n      activeStep = response.index;\n      if (response.index == 0) {\n        response.direction == \"down\" ? (DELAY = 0) : (DELAY = 1000);\n        init(DELAY);\n      }\n      if (response.index == 1) {\n        response.direction == \"down\" ? (DELAY = 1000) : (DELAY = 0);\n        createTimeline(DELAY);\n      }\n      if (response.index == 2) {\n        highlight();\n      }\n      lastResponse = response;\n    }\n\n    // setup the instance, pass callback functions\n    scroller\n      .setup({\n        step: \"#colorSection .step\",\n      })\n      .onStepEnter((response) => handleStepEnter(response))\n      .onStepExit((response) => {});\n\n    function resizeWidth() {\n      if (window.innerWidth != currWindowWidth) {\n        if (lastResponse) {\n          handleStepEnter(lastResponse);\n        }\n      }\n    }\n\n    window.addEventListener(\"resize\", debounceFn(resizeWidth, 200));\n    window.addEventListener(\"resize\", debounceFn(scroller.resize, 300));\n  });\n\n  const grouped = mapToArray(d3.group(data, (d) => d.color_hex)).sort(\n    (a, b) => a.value.length - b.value.length\n  );\n\n  for (let i = 0; i < grouped.length; i++) {\n    // Lookup and append color name/text color to grouped data\n    grouped[i].colors = data.find((d) => d.color_hex == grouped[i].key).colors;\n    grouped[i].text_color = data.find(\n      (d) => d.color_hex == grouped[i].key\n    ).text_color;\n  }\n\n  const unique_colors = grouped.length;\n  const maxColor = d3.max(grouped, (d) => d.value.length);\n\n  $: xScaleBar = d3\n    .scaleLinear()\n    .domain([0, maxColor])\n    .range([padding.left, width - padding.right]);\n\n  $: yScaleBar = d3\n    .scaleBand()\n    .domain(grouped.map((d) => d.key))\n    .range([height - padding.bottom, padding.top]);\n\n  $: xTicks = xScaleBar.ticks(5);\n\n  // FOR TIMELINE VIEW\n  const num_paintings = 403;\n\n  $: xScaleTimeline = d3\n    .scaleLinear()\n    .domain([0, num_paintings])\n    .range([padding.left, width - padding.right]);\n\n  $: yScaleTimeline = d3\n    .scaleBand()\n    .domain(grouped.map((d) => d.key))\n    .range([height - padding.bottom, padding.top]);\n\n  // SCROLL STEPS\n  function init(DELAY) {\n    d3.selectAll(\".timelineRect\")\n      .data(data)\n      .transition(\"timeline-exit\")\n      .duration(1000)\n      .ease(d3.easeExp)\n      .attr(\"x\", 0);\n\n    d3.selectAll(\".colorBar\")\n      .data(grouped)\n      .attr(\"y\", (d) => yScaleBar(d.key))\n      .attr(\"x\", 0)\n      .attr(\"height\", (height / unique_colors) * 0.9)\n      .transition(\"bar-enter\")\n      .duration(1000)\n      .delay(DELAY)\n      .ease(d3.easeExp)\n      .attr(\"width\", (d) => xScaleBar(d.value.length));\n  }\n\n  function createTimeline(DELAY) {\n    d3.selectAll(\".colorBar\")\n      .data(grouped)\n      .transition(\"bar-exit\")\n      .duration(1000)\n      .ease(d3.easeExp)\n      .attr(\"width\", 0);\n\n    d3.selectAll(\".timelineRect\")\n      .data(data)\n      .attr(\"y\", (d) => yScaleTimeline(d.color_hex))\n      .attr(\"opacity\", 1)\n      .attr(\"height\", (height / unique_colors) * 0.9)\n      .transition(\"timeline-enter\")\n      .duration(1000)\n      .delay(DELAY)\n      .ease(d3.easeExp)\n      .attr(\"x\", (d) => xScaleTimeline(d.painting_index))\n      .attr(\"width\", width / num_paintings);\n  }\n\n  function highlight() {\n    d3.selectAll(\".timelineRect\")\n      .data(data)\n      .transition(\"timeline-highlight\")\n      .duration(1000)\n      .attr(\"x\", (d) => xScaleTimeline(d.painting_index))\n      .attr(\"y\", (d) => yScaleTimeline(d.color_hex))\n      .attr(\"opacity\", (d) =>\n        (d.color_hex == \"#8A3324\") | (d.color_hex == \"#5F2E1F\") ? 1 : 0.3\n      )\n      .attr(\"width\", width / num_paintings)\n      .attr(\"height\", (height / unique_colors) * 0.9);\n  }\n</script>\n\n<div class=\"scrollama-container\">\n  <div class=\"scrollama-graphic\">\n    <div class=\"chart\" bind:offsetWidth={width} style=\"height: {height}px\">\n      <div class=\"timelineTip\" />\n      <svg style=\"width: 100%; height: 100%;\">\n        <ColorViz {height} {padding} {grouped} {data} {xScaleBar} {xTicks} />\n      </svg>\n    </div>\n  </div>\n\n  <div class=\"scrollama-steps\" id=\"colorSection\">\n    <div class=\"step\" class:active={activeStep == 0} data-step=\"a\">\n      <p>Testing new approach to mobile responsiveness</p>\n    </div>\n    <div class=\"step\" class:active={activeStep == 1} data-step=\"b\">\n      <p>Content.</p>\n    </div>\n    <div class=\"step\" class:active={activeStep == 2} data-step=\"c\">\n      <p>\n        Here, we notice patterns. At the end of Season 6, Bob Ross moved away\n        from <span\n          class=\"highlight-text\"\n          style=\"background: #8A3324; color: white;\">Burnt Umber</span\n        >\n        and moved toward\n        <span class=\"highlight-text\" style=\"background: #5F2E1F; color: white;\"\n          >Dark Sienna</span\n        >.\n      </p>\n      <p>\n        The two colors are similar enough that Ross could easily substitute one\n        for the other without much functional difference in his art.\n      </p>\n    </div>\n  </div>\n</div>\n\n<style lang=\"scss\">.timelineTip {\n  opacity: 0;\n  position: absolute;\n  pointer-events: none; }\n\n:global(.timelineTip .title) {\n  text-align: center;\n  padding: 0.5rem;\n  border-radius: 10px;\n  box-shadow: 1px 1px 6px 1px rgba(0, 0, 0, 0.5); }</style>\n",
    "<script>\n  import GalleryPainting from \"./GalleryPainting.svelte\";\n  import GalleryInformation from \"./GalleryInformation.svelte\";\n  import Scrubber from \"./Scrubber.svelte\";\n  import { ind } from \"../stores/global.js\";\n\n  export let data;\n  export let long_data;\n\n  let selected = [];\n\n  // How many art pieces there are in the dataset\n  const LENGTH = data.length - 1;\n\n  $: {\n    selected = data[$ind] ? data[$ind] : data[0];\n  }\n</script>\n\n<div class=\"gallery\" id=\"gallery\">\n  <div class=\"background\">\n    <div class=\"gallery-bg\">\n      <button\n        on:click={() => {\n          ind.update((n) => (n - 1 < 0 ? 0 : n - 1));\n        }}\n        class={$ind === 0 ? \"left disabled\" : \"left\"}\n      >\n        &#8249;\n      </button>\n      <img\n        src=\"./assets/background.png\"\n        alt=\"An empty art gallery wall\"\n        width=\"100%\"\n      />\n      <div class=\"painting\">\n        <a\n          href={selected.youtube_src}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <GalleryPainting {selected} />\n        </a>\n      </div>\n      <button\n        on:click={() => {\n          ind.update((n) => (n + 1 > LENGTH ? LENGTH : n + 1));\n        }}\n        class={$ind === LENGTH ? \"disabled right\" : \"right\"}\n      >\n        &#8250;\n      </button>\n    </div>\n    <Scrubber data={long_data} />\n  </div>\n  <div class=\"information\">\n    <GalleryInformation {selected} />\n  </div>\n</div>\n\n<style lang=\"scss\">button {\n  background: white;\n  box-shadow: 1px 1px 3px 1px #cecece;\n  width: 2rem;\n  height: 2rem;\n  padding: 0;\n  border-radius: 50%; }\n  button.disabled {\n    cursor: not-allowed;\n    background: #e4e4e4;\n    color: #a8a8a8;\n    box-shadow: none; }\n  button:hover {\n    background: whitesmoke;\n    box-shadow: 0 0 3px 0 #cecece; }\n\n.gallery {\n  display: flex;\n  min-height: 100vh; }\n  .gallery > .background {\n    flex: 2;\n    background: white;\n    display: flex;\n    flex-direction: column; }\n    @media screen and (max-width: 968px) {\n      .gallery > .background {\n        flex-direction: column-reverse;\n        background: whitesmoke; } }\n    .gallery > .background .gallery-bg {\n      position: relative; }\n      .gallery > .background .gallery-bg > button {\n        position: absolute;\n        top: 50%; }\n        .gallery > .background .gallery-bg > button.left {\n          left: 10px; }\n        .gallery > .background .gallery-bg > button.right {\n          right: 10px; }\n      .gallery > .background .gallery-bg .painting {\n        position: absolute;\n        top: 30%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        width: 33%;\n        transition: 1s all ease; }\n        .gallery > .background .gallery-bg .painting:hover {\n          transform: translate(-48%, -48%); }\n  .gallery > .information {\n    flex: 1;\n    display: flex;\n    place-items: center;\n    background: white; }\n\n@media screen and (max-width: 968px) {\n  .gallery {\n    flex-direction: column; } }</style>\n",
    "<script>\n  export let selected;\n  import { ind } from \"../stores/global.js\";\n  import { getTextColor } from \"../utils/process.js\";\n\n  // The selected art piece's colors\n  let colors = [];\n\n  // How many colors there are in the selected art piece\n  let colors_length = 0;\n\n  $: {\n    // Grab how many colors for the for loop below\n    colors_length = selected.colors.length;\n\n    // Reset colors to be blank lest duplication occur\n    colors = [];\n\n    // Create color and hex property for the colors object\n    for (let i = 0; i < colors_length; i++) {\n      colors[i] = { color: selected.colors[i], hex: selected.color_hex[i] };\n    }\n\n    // Apply text color function to get proper text color based on background\n    colors.forEach(function (d) {\n      d.text_color = getTextColor(d.hex);\n    });\n  }\n</script>\n\n<div class=\"content\">\n  <div class=\"title-container\">\n    <a\n      href={selected.youtube_src}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      class=\"subtitle\"\n    >\n      Season {selected.season}, episode {selected.episode}\n    </a>\n    <h1 class=\"title\">{selected.painting_title}</h1>\n    <h3 class=\"subtitle\">By Bob Ross</h3>\n    <div class=\"purchase-container\">\n      <button>\n        <a href={selected.youtube_src} target=\"_blank\" rel=\"noopener noreferrer\"\n          >Watch on YouTube</a\n        ></button\n      >\n      <button\n        style=\"margin: 0 auto\"\n        on:click={() => {\n          ind.set(Math.floor(Math.random() * 403));\n        }}>Show me another</button\n      >\n    </div>\n  </div>\n  <div class=\"color-container\">\n    <h3>Colors used</h3>\n    <div class=\"colors\">\n      {#each colors as { color, hex, text_color }}\n        <div style=\"background: {hex}; color: {text_color}\" class=\"color-label\">\n          {color}\n        </div>\n      {/each}\n    </div>\n  </div>\n</div>\n\n<style lang=\"scss\">.content {\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 0 1rem; }\n  .content a {\n    text-decoration: none;\n    color: black;\n    font-weight: 200; }\n\n.title-container {\n  margin-top: 2rem; }\n  .title-container .title {\n    margin: 0.5rem 0 0.25rem 0; }\n  .title-container .subtitle {\n    margin-top: 0;\n    font-weight: 400;\n    font-size: 1rem; }\n\n.purchase-container {\n  margin-top: 4rem; }\n  .purchase-container button {\n    text-transform: uppercase;\n    font-weight: 200;\n    letter-spacing: 1px;\n    margin-right: 0.5rem;\n    font-size: 0.8rem;\n    box-shadow: 0px 0px 4px 1px #cecece; }\n    .purchase-container button:hover {\n      box-shadow: 0px 0px 2px 1px #cecece80;\n      background: whitesmoke; }\n    .purchase-container button a {\n      font-weight: 200 !important; }\n\n.colors {\n  display: flex;\n  flex-direction: row;\n  justify-content: left;\n  flex-wrap: wrap;\n  margin-bottom: 2rem; }\n\n.color-label {\n  display: inline-block;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 5px;\n  box-shadow: 3px 1px 6px 0px #cecece;\n  font-size: 0.9rem; }</style>\n",
    "<script>\n  export let selected;\n\n  // Promise handling of images while new ones load\n  const loadImage = (url) =>\n    new Promise((resolve, reject) => {\n      const img = new Image();\n      img.addEventListener(\"load\", () => resolve(img));\n      img.addEventListener(\"error\", (err) => reject(err));\n      img.src = url;\n    });\n</script>\n\n<div class=\"frame\">\n  {#await loadImage(selected.img_src)}\n    <img src=\"./assets/placeholder.png\" alt=\"Placeholder painting\" />\n  {:then}\n    <img\n      src={selected.img_src}\n      alt=\"A painting titled {selected.painting_title}\"\n    />\n  {:catch error}\n    <div />\n  {/await}\n</div>\n\n<style lang=\"scss\">img {\n  aspect-ratio: 4/3;\n  -o-object-fit: cover;\n     object-fit: cover;\n  border-radius: 5px;\n  box-shadow: 1px 1px 10px 1px #cecece; }\n\n.frame {\n  background-color: #ddc;\n  border: solid 2vmin #eee;\n  border-bottom-color: #fff;\n  border-left-color: #eee;\n  border-radius: 2px;\n  border-right-color: #eee;\n  border-top-color: #fff;\n  box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.25) inset, 0 3px 10px 3px rgba(0, 0, 0, 0.25);\n  box-sizing: border-box;\n  display: inline-block;\n  margin: 1vh 1vw;\n  padding: 1vmin;\n  position: relative;\n  text-align: center; }\n  .frame:before {\n    border-radius: 2px;\n    bottom: -1vmin;\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.25) inset;\n    content: \"\";\n    left: -1vmin;\n    position: absolute;\n    right: -1vmin;\n    top: -1vmin; }\n  .frame:after {\n    border-radius: 2px;\n    bottom: -2vmin;\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.25);\n    content: \"\";\n    left: -2vmin;\n    position: absolute;\n    right: -2vmin;\n    top: -2vmin; }</style>\n",
    "<script>\n  import * as d3 from \"d3\";\n  import { fade } from \"svelte/transition\";\n  export let data, height, padding, xScaleHist, xTicks;\n\n  function handleMouseover(e) {\n    let d = e.target.attributes;\n    const tip = d3.select(\".gridTip\");\n\n    tip.html(`<p class='title'>${d.title.value}</p>\n              <p class='subtitle'>${d.subtitle.value}</p>\n              <div class=\"frame\">\n                <img class=\"painting\" src=${d.img.value}></img>\n              </div>`);\n\n    const paintingHeight = parseFloat(tip.style(\"height\"));\n    const paintingWidth = parseFloat(tip.style(\"width\"));\n\n    tip\n      .style(\"opacity\", 1)\n      // Below handles offset on edges of screen\n      .style(\n        \"left\",\n        (e.clientX > window.innerWidth - paintingWidth\n          ? e.layerX - paintingWidth\n          : e.layerX) + \"px\"\n      )\n      .style(\n        \"top\",\n        (e.clientY > window.innerHeight - paintingHeight\n          ? e.layerY - paintingHeight\n          : e.layerY - 28) + \"px\"\n      );\n  }\n\n  function handleMouseout() {\n    d3.select(\".gridTip\").style(\"opacity\", 0);\n  }\n\n  function handleTouch(e) {\n    let d = e.target.attributes;\n\n    const tip = d3.select(\".gridTip\");\n\n    tip.html(`<p class='title'>${d.title.value}</p>\n              <p class='subtitle'>${d.subtitle.value}</p>\n              <div class=\"frame\">\n                <img class=\"painting\" src=${d.img.value}></img>\n              </div>`);\n\n    const xPos = parseFloat(d.x.value);\n    const yPos = parseFloat(d.y.value);\n\n    tip\n      .style(\"opacity\", 1)\n      // Below handles offset on edges of screen\n      .style(\n        \"left\",\n        (xPos > window.innerWidth / 2 // Right side of screen\n          ? xPos - 25\n          : xPos + 25) + \"px\"\n      )\n      .style(\n        \"top\",\n        (yPos > window.innerHeight / 2 // Bottom of screen\n          ? yPos - 75\n          : yPos + 25) + \"px\"\n      );\n  }\n</script>\n\n<!-- RECTS -->\n<g\n  on:mouseover={handleMouseover}\n  on:mouseout={handleMouseout}\n  on:touchstart={handleTouch}\n  on:touchend={handleMouseout}\n>\n  {#each data as d}\n    <rect\n      title={d.painting_title}\n      subtitle={\"Season \" + d.season + \", episode \" + d.episode}\n      img={d.img_src}\n      class=\"gridRect\"\n      fill=\"grey\"\n      stroke=\"white\"\n    />\n  {/each}\n</g>\n\n<!-- X AXIS -->\n<g transform=\"translate(0, {height - padding.bottom})\">\n  {#if xTicks}\n    {#each xTicks as x}\n      <g\n        class=\"tick\"\n        opacity=\"1\"\n        transform=\"translate({xScaleHist(x)},0)\"\n        transition:fade\n      >\n        <line stroke=\"currentColor\" y2=\"6\" />\n        <text fill=\"currentColor\" y=\"9\" dy=\"1em\" x=\"-{padding.left}\">\n          {x}\n        </text>\n      </g>\n    {/each}\n  {/if}\n</g>\n\n<!-- X AXIS -->\n<style lang=\"scss\">.tick line {\n  stroke: none; }\n\n.tick text {\n  font-weight: 200; }\n  @media screen and (max-width: 768px) {\n    .tick text {\n      font-size: 0.75rem; } }\n\n:global(.gridTip .painting) {\n  width: 100%; }\n\n:global(.gridTip .title) {\n  text-align: center;\n  font-weight: normal;\n  font-size: 1rem;\n  margin: 0.5rem 0 0 0;\n  padding: 0 0.1rem; }\n\n:global(.gridTip .subtitle) {\n  text-align: center;\n  font-weight: 100;\n  font-size: 0.75rem;\n  margin: 0 0 0.5rem 0; }</style>\n",
    "<script>\n  import * as d3 from \"d3\";\n  import { onMount } from \"svelte\";\n  import debounceFn from \"lodash.debounce\";\n  import Icon from \"./helpers/Icon.svelte\";\n  import GridHistogram from \"./GridHistogram.svelte\";\n  import { windowWidth } from \"../stores/global.js\";\n\n  export let data, height;\n\n  const padding = { top: 0, right: 0, bottom: 30, left: 0 };\n\n  $: width = null;\n  $: activeStep = 0;\n  $: lastResponse = null;\n\n  let currWindowWidth = $windowWidth;\n\n  // SCROLL\n  onMount(async () => {\n    // instantiate the scrollama\n    const scroller = scrollama();\n\n    function handleStepEnter(response) {\n      activeStep = response.index;\n      if (response.index == 0) {\n        grid();\n      }\n      if (response.index == 1) {\n        histogram();\n      }\n      if (response.index == 2) {\n        highlight();\n      }\n      lastResponse = response;\n    }\n\n    // setup the instance, pass callback functions\n    scroller\n      .setup({\n        step: \"#gridSection .step\",\n      })\n      .onStepEnter((response) => handleStepEnter(response))\n      .onStepExit((response) => {});\n\n    function resizeWidth() {\n      // If width changed, trigger last step again\n      if (window.innerWidth != currWindowWidth) {\n        if (lastResponse) {\n          handleStepEnter(lastResponse);\n        }\n      }\n    }\n\n    window.addEventListener(\"resize\", resizeWidth);\n    window.addEventListener(\"resize\", debounceFn(scroller.resize, 300));\n  });\n\n  // A painting can have between 1 and 15 (maxColors) colors\n  // We want an array of 1-15 for our X axis\n  //  Using the default data.map(d => d.num_colors).sort((a,b) => a - b) would result in missing numbers (2) to not appear\n  const maxColors = d3.max(data, (d) => d.num_colors);\n  const xDomain = Array(maxColors)\n    .fill()\n    .map((element, index) => index + 1);\n\n  $: xScaleHist = d3\n    .scaleBand()\n    .domain(xDomain)\n    .range([padding.left, width - padding.right]);\n\n  $: yScaleHist = d3\n    .scaleLinear()\n    .domain(d3.extent(data, (d) => d.yPos))\n    .range([height - padding.bottom, padding.top]);\n\n  $: xScaleGrid = d3\n    .scaleBand()\n    .domain(data.map((d) => d.gridX))\n    .range([padding.left, width - padding.right]);\n\n  $: yScaleGrid = d3\n    .scaleBand()\n    .domain(data.map((d) => d.gridY))\n    .range([0, height - padding.bottom - padding.top]);\n\n  $: xTicks = null;\n\n  $: rectWidthGrid = (width / 19) * 0.95;\n  $: rectHeightGrid = (height / 21) * 0.95;\n\n  $: rectWidthHist = width / d3.max(data, (d) => d.num_colors);\n  $: rectHeightHist =\n    (height - padding.top - padding.bottom) / d3.max(data, (d) => d.yPos);\n  function grid() {\n    xTicks = null;\n\n    d3.selectAll(\".gridRect\")\n      .data(data)\n      .transition(\"grid\")\n      // .delay((d) => (d.gridY * d.gridX) / 10)\n      .duration(1000)\n      .attr(\"x\", (d) => xScaleGrid(d.gridX))\n      .attr(\"y\", (d) => yScaleGrid(d.gridY))\n      .attr(\"width\", rectWidthGrid)\n      .attr(\"height\", rectHeightGrid)\n      .attr(\"fill\", \"grey\")\n      .attr(\"stroke\", \"white\");\n  }\n\n  function histogram() {\n    xTicks = xScaleHist.domain();\n\n    d3.selectAll(\".gridRect\")\n      .data(data)\n      .transition(\"histogram\")\n      // .delay((d) => d.num_colors * 15)\n      .duration(1000)\n      .attr(\"x\", (d) => xScaleHist(d.num_colors))\n      .attr(\"y\", (d) => yScaleHist(d.yPos))\n      .attr(\"width\", rectWidthHist)\n      .attr(\"height\", rectHeightHist)\n      .attr(\"fill\", \"grey\")\n      .attr(\"stroke\", \"white\");\n  }\n\n  function highlight() {\n    d3.selectAll(\".gridRect\")\n      .data(data)\n      .transition(\"histogram\")\n      // .delay((d) => -d.yPos * 5)\n      .duration(1000)\n      .attr(\"x\", (d) => xScaleHist(d.num_colors))\n      .attr(\"y\", (d) => yScaleHist(d.yPos))\n      .attr(\"width\", rectWidthHist)\n      .attr(\"height\", rectHeightHist)\n      .attr(\"fill\", \"grey\")\n      .attr(\"stroke\", \"white\")\n      .attr(\"fill\", (d) => (d.num_colors == 12 ? \"steelblue\" : \"grey\"))\n      .attr(\"stroke\", (d) => (d.num_colors == 12 ? \"steelblue\" : \"grey\"));\n  }\n</script>\n\n<div class=\"scrollama-container\">\n  <div class=\"scrollama-graphic\">\n    <div\n      class=\"chart\"\n      id=\"grid\"\n      bind:offsetWidth={width}\n      style=\"height: {height}px\"\n    >\n      <div class=\"gridTip\" />\n      <svg style=\"width: 100%; height: 100%;\">\n        <GridHistogram {height} {data} {padding} {xScaleHist} {xTicks} />\n      </svg>\n    </div>\n  </div>\n\n  <div class=\"scrollama-steps\" id=\"gridSection\">\n    <div class=\"step\" class:active={activeStep == 0} data-step=\"a\">\n      <p>\n        This is every piece Bob Ross painted in his series <strong\n          >The Joy of Painting</strong\n        >. Each rectangle\n        <svg width=\"20\" height=\"15\">\n          <rect width=\"100%\" height=\"100%\" fill=\"grey\" />\n        </svg>\n        represents a painting. Go ahead and hover\n        <Icon name=\"mouse-pointer\" stroke=\"black\" strokeWidth=\"1\" />\n        over a rectangle to see the painting it represents!\n      </p>\n    </div>\n    <div class=\"step\" class:active={activeStep == 1} data-step=\"b\">\n      <p>\n        We can organize the pieces by the <strong>number of colors</strong> used\n        to paint them.\n      </p>\n    </div>\n    <div class=\"step\" class:active={activeStep == 2} data-step=\"c\">\n      <p>\n        Most commonly, paintings have <span\n          class=\"highlight-text\"\n          style=\"background: steelblue; color: white;\">12 colors</span\n        >. Of the {data.length} pieces Bob Ross painted, {data.filter(\n          (d) => d.num_colors == 12\n        ).length} used 12 colors.\n      </p>\n    </div>\n  </div>\n</div>\n\n<style lang=\"scss\">.gridTip {\n  opacity: 0;\n  position: absolute;\n  background: white;\n  border: 0px;\n  border-radius: 3px;\n  pointer-events: none;\n  width: 200px; }</style>\n",
    "<script>\n  import Hero from \"./prose/Hero.svelte\";\n  import Intro from \"./prose/Intro.svelte\";\n  import GridHistogramWrapper from \"./GridHistogramWrapper.svelte\";\n  import Gallery from \"./Gallery.svelte\";\n  import ColorVizWrapper from \"./ColorVizWrapper.svelte\";\n  import { processData, getTextColor } from \"../utils/process.js\";\n  import debounceFn from \"lodash.debounce\";\n\n  import data from \"../data/bob_ross_paintings.csv\";\n  import long_data from \"../data/colors_long.csv\";\n  import { onMount } from \"svelte\";\n\n  import { windowHeight } from \"../stores/global.js\";\n\n  processData(data);\n  processData(long_data, true);\n\n  long_data.forEach(function (d) {\n    d.text_color = getTextColor(d.color_hex);\n  });\n\n  console.log(data);\n\n  //RESIZING\n  let height = 800;\n\n  onMount(() => {\n    height = $windowHeight * 0.8;\n\n    function resizeFn() {\n      if (window.innerWidth > 768) {\n        height = $windowHeight * 0.8;\n      }\n    }\n    window.addEventListener(\"resize\", debounceFn(resizeFn, 300));\n  });\n</script>\n\n<Hero />\n\n<Intro />\n\n<section>\n  <GridHistogramWrapper {data} {height} />\n</section>\n\n<section>\n  <ColorVizWrapper data={long_data} {height} />\n</section>\n\n<!-- <section> -->\n<Gallery {data} {long_data} />\n<!-- </section> -->\n\n<!-- </section> -->\n<style lang=\"scss\" global>:global(section) {\n  padding: 1rem;\n  margin: 0 auto; }\n  :global(section.prose) {\n    max-width: 78ch; }\n  :global(section.visual) {\n    max-width: 800px; }</style>\n",
    "<script>\n  import feather from \"feather-icons\";\n  export const directions = [\"n\", \"ne\", \"e\", \"se\", \"s\", \"sw\", \"w\", \"nw\"];\n\n  export let name;\n  export let direction = \"n\";\n  export let strokeWidth;\n  export let stroke;\n\n  $: icon = feather.icons[name];\n  $: rotation = directions.indexOf(direction) * 45;\n  $: if (icon) {\n    if (stroke) icon.attrs[\"stroke\"] = stroke;\n    if (strokeWidth) icon.attrs[\"stroke-width\"] = strokeWidth;\n  }\n</script>\n\n{#if icon}\n  <svg {...icon.attrs} style={`transform: rotate(${rotation}deg);`}>\n    <g>\n      {@html icon.contents}\n    </g>\n  </svg>\n{/if}\n\n<style>\n  svg {\n    width: 1em;\n    height: 1em;\n    overflow: visible;\n    transform-origin: 50% 50%;\n  }</style>\n",
    "<script></script>\n\n<footer>\n  <section class=\"notes\">\n    <h2>Notes and data</h2>\n    <p>\n      This project was built with <a href=\"https://svelte.dev/\">Svelte</a> and\n      enhanced by The Pudding's\n      <a href=\"https://github.com/the-pudding/svelte-starter\"\n        >Svelte Starter template</a\n      >. Data is from\n      <a href=\"https://github.com/jwilber/Bob_Ross_Paintings\">Jared Wilber</a>\n      and underwent\n      <a\n        href=\"https://github.com/connorrothschild/bob-ross-art-gallery/blob/master/r/cleaning.R\"\n        >some processing in R</a\n      >. The images of Bob Ross' paintings are from\n      <a href=\"https://www.twoinchbrush.com/\">TwoInchBrush</a>.\n    </p>\n    <p>\n      Code is available on <a\n        href=\"https://github.com/connorrothschild/bob-ross-art-gallery\"\n        >GitHub</a\n      >. Follow me on <a href=\"https://twitter.com/CL_Rothschild\">Twitter</a>!\n    </p>\n  </section>\n</footer>\n\n<style lang=\"scss\">footer {\n  display: flex;\n  place-items: center;\n  background-color: var(--text-main);\n  color: white;\n  padding: 3rem 1rem;\n  min-height: 50vh;\n  margin: auto; }\n\na,\na:visited,\na:hover {\n  color: var(--background-body); }\n\n.notes {\n  max-width: 768px;\n  margin: auto; }\n  .notes h2 {\n    font-weight: bold;\n    margin-bottom: 2rem; }</style>\n",
    "<script>\n</script>\n\n<div class=\"hero-background\">\n  <div class=\"hero\">\n    <h1 class=\"headline\">The Bob Ross Virtual Art Gallery</h1>\n    <h2 class=\"subtitle\">You deserve some calm.</h2>\n    <h3>By <a href=\"https://connorrothschild.com\">Connor Rothschild</a></h3>\n  </div>\n</div>\n\n<style>\n  .hero-background {\n    background: #1da1f290;\n    background: linear-gradient(#1da1f290, var(--background));\n  }\n\n  .hero {\n    text-align: center;\n    min-height: 100vh;\n    display: flex;\n    flex-direction: column;\n    max-width: 1000px;\n    margin: 0 auto;\n  }\n\n  .headline {\n    margin-top: 10rem;\n    text-transform: uppercase;\n    font-weight: 900;\n    font-size: clamp(1vw, 5rem, 10vw);\n    color: black;\n    line-height: 1.25;\n  }\n\n  .subtitle {\n    font-size: clamp(1vw, 2.5rem, 5vw);\n    color: #353535;\n    font-weight: 300;\n  }\n\n  a {\n    color: black;\n    text-decoration: none;\n    font-weight: bold;\n  }</style>\n",
    "<script></script>\n\n<section class=\"prose\">\n  <p class=\"has-dropcap\">\n    Welcome to the Bob Ross virtual art gallery! We know you've had a <em\n      >hard</em\n    > year, and you deserve to relax.\n  </p>\n  <p>\n    Thankfully, we've collected 403 paintings that Bob Ross painted during his <strong\n      >Joy of Painting</strong\n    >\n    series. For each of those paintings, we've collected information on how it was\n    painted, including <em>which colors each painting used</em>.\n  </p>\n  <p>\n    Let's take a brief tour before getting to the gallery!<a\n      href=\"#gallery\"\n      class=\"button\">(or, skip to the gallery)</a\n    >\n  </p>\n</section>\n\n<style lang=\"scss\">.has-dropcap:first-child:first-letter {\n  float: left;\n  font-family: Georgia;\n  font-size: 80px;\n  line-height: 60px;\n  padding-top: 3px;\n  padding-right: 5px;\n  padding-left: 2px; }\n\np {\n  font-size: 1.2rem; }\n\n.button {\n  font-size: 1rem;\n  padding: 5px;\n  background: white;\n  border-radius: 3px;\n  box-shadow: 0px 0px 6px 1px #cecece;\n  font-weight: lighter;\n  text-decoration: none;\n  color: black;\n  margin: 0 5px;\n  transition: all 500ms ease; }\n  .button:hover {\n    background: whitesmoke;\n    box-shadow: 0px 0px 3px 1px #cecece; }</style>\n"
  ],
  "names": [],
  "mappings": "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"
}